{"version":3,"sources":["components/lib.tsx","auth-provider.ts","utils/http.ts","utils/reorder.ts","utils/use-optimistic-options.ts","utils/project.ts","utils/url.ts","screens/project-list/util.ts","utils/index.ts","utils/use-async.ts","context/auth-context.tsx","utils/user.ts","components/id-select.tsx","components/user-select.tsx","screens/project-list/search-panel.tsx","components/pin.tsx","screens/project-list/table-list.tsx","screens/project-list/index.tsx","assets/software-logo.svg","utils/task.ts","screens/kanban/util.ts","screens/epic/util.ts","screens/epic/create-epic.tsx","utils/epic.ts","screens/epic/index.tsx","components/drag-and-drop.tsx","utils/task-type.ts","components/task-type-select.tsx","screens/kanban/search-panel.tsx","utils/kanban.ts","assets/task.svg","assets/bug.svg","screens/kanban/create-task.tsx","components/mark.tsx","screens/kanban/kanban-cloumn.tsx","screens/kanban/create-kanban.tsx","screens/kanban/task-modal.tsx","screens/kanban/index.tsx","screens/project/index.tsx","screens/project-list/project-modal.tsx","components/project-popover.tsx","components/user-popover.tsx","authenticated-app.tsx","components/error-boundry.tsx","unauthenticated-app/login.tsx","unauthenticated-app/register.tsx","assets/logo.svg","assets/left.svg","assets/right.svg","unauthenticated-app/index.tsx","App.tsx","reportWebVitals.ts","context/index.tsx","index.tsx"],"names":["Row","styled","div","props","between","undefined","marginBottom","gap","FullPage","FullPageLoading","size","FullPageErrorFallback","error","Text","type","message","ErrorBox","value","ButtonNoPadding","Button","ScreenContainer","localStorageKey","handleUserResponse","user","window","localStorage","setItem","token","apiUrl","process","logout","a","removeItem","http","endpoint","data","headers","customConfig","config","method","Authorization","urlParam","toUpperCase","qs","stringify","Object","assign","body","JSON","fetch","then","response","status","auth","location","reload","Promise","reject","messag","json","ok","useHttp","useAuth","useCallback","reorder","fromId","referenceId","list","console","log","copiedList","movingItemIndex","findIndex","item","id","insertAfter","length","targetIndex","insertBefore","from","to","toItem","removedItem","splice","toIndex","indexOf","useConfig","queryKey","callback","queryClient","useQueryClient","onSuccess","invalidateQueries","onMutate","target","previousItems","getQueryData","setQueryData","old","onError","newItem","context","useDeleteConfig","filter","useEditConfig","map","useAddConfig","useProject","param","client","useQuery","useEditProject","useMutation","params","useAddProject","useProjectDetail","enabled","useUrlQueryParam","keys","useSearchParams","searchParams","setSearchParams","useSetUrlSearchParams","useMemo","reduce","pre","key","get","o","clearParam","fromEntries","obj","result","forEach","useProjectsSearchParams","setParam","personId","Number","useProjectsQueryKey","useProjectModal","projectCreate","setProjectCreate","editingProjectId","setEditintProjectId","setUrlParams","projectModalOpen","open","close","startEdit","editingProject","isLoading","useDocumentTitle","title","keepOnUnmount","oldTitle","useRef","document","current","useEffect","resetRoute","href","origin","defaultInitialState","stat","defaultConfig","throwOnError","useSafeDispatch","dispatch","mountedRef","useMountedRef","useAsync","initialState","initialConfig","useReducer","state","action","safeDispatch","useState","retry","setRetry","setData","setError","run","promise","runConfig","Error","catch","isIdle","isSuccess","isError","bootstrapUser","getItem","AuthContext","React","createContext","displayName","AuthProvider","children","setUser","Provider","login","form","register","clear","useContext","useUser","IdSelect","onChange","defaultOptionName","options","restProps","toNumber","Option","option","name","isNaN","UserSelect","users","SearchPanel","css","layout","Item","evt","Pin","checked","onCheckedChange","count","num","TableList","mutate","columns","disabled","render","project","pin","dataIndex","sorter","b","localeCompare","String","find","created","dayjs","format","pagination","rowKey","record","More","deleteProject","useDeleteProject","overlay","onClick","Modal","confirm","content","okText","onOk","confirmDeleteProject","ProjectList","time","debounceValue","setDebouncesValue","timeOut","setTimeout","clearTimeout","useDebounce","Container","dataSource","loading","whyDidYouRender","_extends","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","x1","y1","x2","y2","stopColor","offset","stroke","strokeWidth","fillRule","d","fill","SvgSoftwareLogo","_ref","svgRef","titleId","viewBox","xmlns","focusable","className","ref","ForwardRef","useTasks","useReorderTask","kanbanId","toKanbanId","useReorderTaskConfig","useProjectIdInUrl","useLocation","pathname","match","useProjectInUrl","useKanbanSearchParams","projectId","useKanbansQueryKey","useTasksSearchParams","typeId","processorId","tagId","useTasksQueryKey","useTasksModal","editingTaskId","setEditingTaskId","useTask","editingTask","useEpicSearchParams","useEpicsQueryKey","CreateEpic","useAddEpic","addEpic","useForm","onFinish","values","onClose","resetFields","visible","forceRender","destroyOnClose","width","style","label","rules","required","placeholder","textAlign","htmlType","EpicScreen","currentProject","epics","useEpics","tasks","deleteEpic","useDeleteEpic","epicCreateOpen","setEpicCreateOpen","overflowY","itemLayout","renderItem","epic","Meta","description","start","end","task","epicId","display","Drop","provided","isValidElement","cloneElement","droppableProps","innerRef","DropChild","forwardRef","Drag","draggableProps","dragHandleProps","useTaskTypes","TaskTypeSelect","taskTypes","useKanbans","useReorderKanban","useReorderKanbanConfig","CreateTask","setName","addTask","useAddTask","mutateAsync","inputMode","setInputMode","toggle","mode","onBlur","autoFocus","onPressEnter","Mark","keyword","arr","split","str","index","color","TaskTypeIcon","taskType","src","taskIcon","bugIcon","alt","TaskCard","cursor","KanbanColumn","kanban","allTasks","TaskContainer","direction","droppableId","minHeight","taskIndex","draggableId","useDeleteKanban","cancelText","CreateKanban","addKanban","useAddKanban","labelCol","span","wrapperCol","TaskModal","isEditingTaskLoading","useEditTask","editTask","editLoading","deleteTask","useDeleteTask","getFieldsValue","setFieldsValue","onCancel","confirmLoading","initialValues","fontSize","KanbanScreen","kanbans","kanbanIsLoading","taskIsLoading","onDrapEnd","useDragEnd","onDragEnd","KanbanContainer","reorderKanban","reorderTask","destination","toId","fromKanbanId","fromTask","toTask","ProjectScreen","routeType","units","useRouteType","Aside","selectedKeys","Main","path","element","replace","aside","ProjectModal","mutateLoading","ProjectPopover","projects","refetch","pinnedProjects","ContentContainer","onVisibleChange","placement","UserPopover","AuthenticatedApp","PageHeader","Header","HeaderLeft","HeaderRight","User","e","preventDefault","main","ErrorBoundry","fallbackRender","Component","LoginScreen","handleSumbit","LongButton","RegisterScreen","cpassword","password","UnauthenticatedApp","isRegister","setIsRegister","Background","ShadowCard","Title","h2","left","right","header","logo","Card","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppProvider","QueryClientProvider","QueryClient","loadServer","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7dff8560.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { Button, Spin, Typography } from \"antd\";\r\nimport { DevTools } from \"jira-dev-tool\";\r\n// 将公共样式提取出来，放在公共组件Row中\r\n// props中可能包含的属性，都应该在泛型中定义\r\nexport const Row = styled.div<{\r\n  gap?: number | boolean;\r\n  between?: Boolean;\r\n  marginBottom?: number;\r\n}>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: ${(props) => (props.between ? \"space-between\" : undefined)};\r\n  margin-bottom: ${(props) =>\r\n    props.marginBottom ? props.marginBottom + \"px\" : undefined};\r\n  > * {\r\n    margin-top: 0 !important;\r\n    margin-bottom: 0 !important;\r\n    margin-right: ${(props) =>\r\n      typeof props.gap === \"number\"\r\n        ? props.gap + \"rem\"\r\n        : props.gap\r\n        ? \"2rem\"\r\n        : undefined};\r\n  }\r\n`;\r\n\r\nconst FullPage = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nexport const FullPageLoading = () => (\r\n  <FullPage>\r\n    <Spin size={\"large\"}></Spin>\r\n  </FullPage>\r\n);\r\n\r\nexport const FullPageErrorFallback = ({ error }: { error: Error | null }) => (\r\n  <FullPage>\r\n    <DevTools />\r\n    <Typography.Text type={\"danger\"}>{error?.message}</Typography.Text>\r\n  </FullPage>\r\n);\r\n\r\n// 类型守卫\r\nconst isError = (value: any): value is Error => value?.message;\r\n\r\nexport const ErrorBox = ({ error }: { error: unknown }) => {\r\n  if (isError(error)) {\r\n    return <Typography.Text type={\"danger\"}>{error?.message}</Typography.Text>;\r\n  }\r\n  // 必不可少，否则ErrorBox不能作为jsx element用\r\n  return null;\r\n};\r\n\r\nexport const ButtonNoPadding = styled(Button)`\r\n  padding: 0;\r\n`;\r\n\r\nexport const ScreenContainer = styled.div`\r\n  padding: 3.2rem;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import { User } from \"types/User\";\n\n// 如果使用的是firebase这种三方auth服务，不需要开发这个文件\nconst localStorageKey = \"__auth_provider_token__\";\nexport const getToken = () => window.localStorage.getItem(localStorageKey);\n\n// 注册和登录时，更新缓存中的token，并返回用户信息\n// 入参是对象{user}, 类型是{ user: User }，它里面的user属性时User类型\nexport const handleUserResponse = ({ user }: { user: User }) => {\n  window.localStorage.setItem(localStorageKey, user.token || \"\");\n  return user;\n};\nconst apiUrl = process.env.REACT_APP_API_URL;\n\nexport const login = (data: { username: string; password: string }) => {\n  return fetch(`${apiUrl}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then(async (response: Response) => {\n    // else语句保证了login方法返回的永远是 Promise\n    if (response.ok) {\n      return handleUserResponse(await response.json());\n    } else {\n      return Promise.reject(await response.json());\n    }\n  });\n};\n\nexport const register = (data: { username: string; password: string }) => {\n  return fetch(`${apiUrl}/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then(async (response: Response) => {\n    if (response.ok) {\n      return handleUserResponse(await response.json());\n    } else {\n      return Promise.reject(await response.json());\n    }\n  });\n};\n\n// 加 async 是为了 logout 的返回值是 Promise 类型\nexport const logout = async () =>\n  window.localStorage.removeItem(localStorageKey);\n","import qs from \"qs\";\r\nimport * as auth from \"auth-provider\";\r\nimport { useAuth } from \"context/auth-context\";\r\nimport { useCallback } from \"react\";\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL;\r\n// data 和 token属性不是RequestInit中的属性，要加到 RequestInit 中\r\n// 可选属性 ?:\r\ninterface Config extends RequestInit {\r\n  token?: string;\r\n  data?: object;\r\n}\r\n// endpoint: 链接后缀\r\n// 加 ={}，让参数成为一个可选参数\r\nexport const http = async (\r\n  endpoint: string,\r\n  { data, token, headers, ...customConfig }: Config = {}\r\n) => {\r\n  const config = {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: token ? `Bearer ${token}` : \"\",\r\n      \"Content-type\": data ? \"application/json\" : \"\",\r\n    },\r\n    ...customConfig,\r\n  };\r\n  let urlParam = `${apiUrl}/${endpoint}`;\r\n  // get 请求，参数拼在链接里；非get请求，(post, delete)请求等，参数放在body里\r\n  const method = config.method.toUpperCase();\r\n  if (method === \"GET\") {\r\n    urlParam = `${urlParam}?${qs.stringify(data)}`;\r\n  } else {\r\n    Object.assign(config, { body: JSON.stringify(data || {}) });\r\n  }\r\n  return window.fetch(urlParam, config).then(async (response) => {\r\n    if (response.status === 401) {\r\n      await auth.logout();\r\n      window.location.reload();\r\n      return Promise.reject({ messag: \"请重新登录\" });\r\n    }\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      return data;\r\n    } else {\r\n      return Promise.reject(data);\r\n    }\r\n  });\r\n};\r\n// JS中typeof是在runtime时运行\r\n// 函数要使用其他hook，它本身也是hook\r\nexport const useHttp = () => {\r\n  const { user } = useAuth();\r\n  // 传参和http的传参相同\r\n  // ts中的typeof是在静态环境时运行\r\n  // typeof http :  把变量http的类型提取出来\r\n  // Parameters<typeof http>：给Parameters传入函数型，读取这个函数型的参数型。\r\n  return useCallback(\r\n    (...[endpoint, config]: Parameters<typeof http>) => {\r\n      return http(endpoint, { ...config, token: user?.token });\r\n    },\r\n    [user?.token]\r\n  );\r\n};\r\n\r\n// utility type的用法：用泛型给它传入一个其他类型，然后用utility type对这份类型进行某种操作。Parameters就是一种utility type\r\n\r\n// Parameters，Partial 和 Omit 是最常用的三种 utility type\r\n\r\n/* type Person = {\r\n  name: string;\r\n  age: number;\r\n}; */\r\n\r\n/* // 给类型的每一项，都加上optional操作符，即： type Person = {name?:string, age?:number}\r\nconst xiaomng: Partial<Person> = {};\r\n// 新类型，剔除掉某些属性\r\nconst shenmiren: Omit<Person, \"name\"> = { age: 12 };\r\ntype PersonKeys = keyof Person;\r\n// Pick在对象里挑选键值，组成一个新的类型\r\ntype PersonOnlyName = Pick<Person, \"name\" | \"age\">;\r\ntype Age = Exclude<PersonKeys, \"name\">; */\r\n","/**\n * 在本地对排序进行乐观更新\n * @param fromId 要排序的项目的id\n * @param type 'before' | 'after'\n * @param referenceId 参照id\n * @param list 要排序的列表, 比如tasks, kanbans\n */\nexport const reorder = ({\n  fromId,\n  type,\n  referenceId,\n  list,\n}: {\n  list: { id: number }[];\n  fromId: number;\n  type: \"after\" | \"before\";\n  referenceId: number;\n}) => {\n  console.log(\"%c %o list\", \"color: red; font-size: 30px;\", list);\n  const copiedList = [...list];\n  // 找到fromId对应项目的下标\n  const movingItemIndex = copiedList.findIndex((item) => item.id === fromId);\n  if (!referenceId) {\n    return insertAfter([...copiedList], movingItemIndex, copiedList.length - 1);\n  }\n  const targetIndex = copiedList.findIndex((item) => item.id === referenceId);\n  const insert = type === \"after\" ? insertAfter : insertBefore;\n  return insert([...copiedList], movingItemIndex, targetIndex);\n};\n\n/**\n * 在list中，把from放在to的前边\n * @param list\n * @param from\n * @param to\n */\nconst insertBefore = (list: unknown[], from: number, to: number) => {\n  const toItem = list[to];\n  const removedItem = list.splice(from, 1)[0];\n  const toIndex = list.indexOf(toItem);\n  list.splice(toIndex, 0, removedItem);\n  return list;\n};\n\n/**\n * 在list中，把from放在to的后面\n * @param list\n * @param from\n * @param to\n */\nconst insertAfter = (list: unknown[], from: number, to: number) => {\n  const toItem = list[to];\n  const removedItem = list.splice(from, 1)[0];\n  const toIndex = list.indexOf(toItem);\n  list.splice(toIndex + 1, 0, removedItem);\n  return list;\n};\n","import { QueryKey, useQueryClient } from \"react-query\";\nimport { Task } from \"types/task\";\nimport { reorder } from \"./reorder\";\n// 生产optimistic update 配置\nexport const useConfig = (\n  queryKey: QueryKey,\n  callback: (target: any, old?: any[]) => any[]\n) => {\n  const queryClient = useQueryClient();\n  return {\n    onSuccess: () => queryClient.invalidateQueries(queryKey),\n    async onMutate(target: any) {\n      const previousItems = queryClient.getQueryData(queryKey);\n      queryClient.setQueryData(queryKey, (old?: any[]) => {\n        return callback(target, old);\n      });\n      return { previousItems };\n    },\n    onError(error: any, newItem: any, context: any) {\n      queryClient.setQueryData(queryKey, context.previousItems);\n    },\n  };\n};\n\nexport const useDeleteConfig = (queryKey: QueryKey) =>\n  useConfig(\n    queryKey,\n    (target, old) => old?.filter((item) => item.id !== target.id) || []\n  );\nexport const useEditConfig = (queryKey: QueryKey) =>\n  useConfig(\n    queryKey,\n    (target, old) =>\n      old?.map((item) =>\n        item.id === target.id ? { ...item, ...target } : item\n      ) || []\n  );\nexport const useAddConfig = (queryKey: QueryKey) =>\n  useConfig(queryKey, (target, old) => {\n    return old ? [...old, target] : [];\n  });\n\nexport const useReorderKanbanConfig = (queryKey: QueryKey) =>\n  useConfig(queryKey, (target, old) => reorder({ list: old, ...target }));\n\nexport const useReorderTaskConfig = (queryKey: QueryKey) =>\n  useConfig(queryKey, (target, old) => {\n    const orderedList = reorder({ list: old, ...target }) as Task[];\n    return orderedList.map((item) =>\n      item.id === target.fromId\n        ? { ...item, kanbanId: target.toKanbanId }\n        : item\n    );\n  });\n","import { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { List } from \"types/List\";\nimport { useHttp } from \"./http\";\nimport {\n  useAddConfig,\n  useDeleteConfig,\n  useEditConfig,\n} from \"./use-optimistic-options\";\n\n// 获取列表信息的hook\nexport const useProject = (param?: Partial<List>) => {\n  const client = useHttp();\n  // 指定返回值的类型： useQuery<List[], Error>(['projects', param]...\n  return useQuery<List[]>([\"projects\", param], () =>\n    client(\"projects\", { data: param })\n  );\n};\n\nexport const useEditProject = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (params: Partial<List>) =>\n      client(`projects/${params.id}`, {\n        method: \"PATCH\",\n        data: params,\n      }),\n    useEditConfig(queryKey)\n  );\n};\n\nexport const useAddProject = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (params: Partial<List>) =>\n      client(`projects`, {\n        data: params,\n        method: \"POST\",\n      }),\n    useAddConfig(queryKey)\n  );\n};\n\nexport const useDeleteProject = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    ({ id }: { id: number }) =>\n      client(`projects/${id}`, {\n        method: \"DELETE\",\n      }),\n    useDeleteConfig(queryKey)\n  );\n};\n\nexport const useProjectDetail = (id?: number) => {\n  const client = useHttp();\n  return useQuery<List>(\n    [\"project\", { id }],\n    () => client(`projects/${id}`),\n    // 一般设计api时，最后一个参数，会是配置参数\n    {\n      // id存在时，才会调用上面的获取详情接口\n      enabled: !!id,\n    }\n  );\n};\n","import { useMemo } from \"react\";\r\nimport { URLSearchParamsInit, useSearchParams } from \"react-router-dom\";\r\nimport { clearParam } from \"screens/project-list/util\";\r\n\r\n// 返回页面url中，指定键的参数值\r\n// 泛型：不指定类型；根据传入的值，来动态判断习惯\r\n// <K extends string> 声明泛型，并用extends加以限制\r\nexport const useUrlQueryParam = <K extends string>(keys: K[]) => {\r\n  const [searchParams] = useSearchParams();\r\n  const setSearchParams = useSetUrlSearchParams();\r\n  return [\r\n    // useMemo的改写: 只有searchParams改变的时候，才去进行reduce所在方法的运算\r\n    useMemo(\r\n      () =>\r\n        keys.reduce((pre, key) => {\r\n          return { ...pre, [key]: searchParams.get(key) || \"\" };\r\n          // in 操作符\r\n        }, {} as { [key in K]: string }),\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      [searchParams]\r\n    ),\r\n    // params里面的参数\r\n    (params: Partial<{ [key in K]: unknown }>) => {\r\n      return setSearchParams(params);\r\n    },\r\n  ] as const;\r\n};\r\n\r\n// 比较 a和 b 的类型定义的区别\r\n/* const a = [\"jack\", 12, {gender: 'male'}]\r\nconst b = [\"jack\", 12, {gender: 'male'}] as const */\r\n\r\n// 改变searchParams的方法，只有这一个入口\r\nexport const useSetUrlSearchParams = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  return (params: { [key in string]: unknown }) => {\r\n    const o = clearParam({\r\n      ...Object.fromEntries(searchParams),\r\n      ...params,\r\n    }) as URLSearchParamsInit;\r\n    return setSearchParams(o);\r\n  };\r\n};\r\n","import { useMemo } from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useProjectDetail } from \"utils/project\";\r\nimport { useSetUrlSearchParams, useUrlQueryParam } from \"utils/url\";\r\n// null,undefined,空字符串都是没有意义的，删除\r\nconst isVoid = (value: unknown) =>\r\n  value === null || value === undefined || value === \"\";\r\n/* \r\nlet b:{[key: string]: unknown}\r\nb = {name: 'cc'}\r\nb = () => {} //报错 \r\n*/\r\n// obj是键值对，键是string类型key，值unknown\r\nexport const clearParam = (obj: { [key: string]: unknown }) => {\r\n  const result = { ...obj };\r\n  Object.keys(obj).forEach((key) => {\r\n    if (isVoid(obj[key])) {\r\n      delete result[key];\r\n    }\r\n  });\r\n  return result;\r\n};\r\n\r\nexport const useMount = (callback: () => void) => {\r\n  useEffect(() => {\r\n    callback();\r\n    // 依赖项里加callback，会造成无限循环，这和useCallback和useMemo有关\r\n    // eslint的报错信息不一定对\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n};\r\n\r\n// 输入param，隔一段时间再才输出这个值\r\n// 当param改变时，使用定时器控制\r\nexport const useDebounce = <V>(param: V, time?: number) => {\r\n  const [debounceValue, setDebouncesValue] = useState(param);\r\n  useEffect(() => {\r\n    let timeOut = setTimeout(() => {\r\n      setDebouncesValue(param);\r\n    }, time);\r\n    return () => clearTimeout(timeOut);\r\n    // param 是非状态的对象，每次传入，都会触发useEffect函数执行\r\n  }, [param, time]);\r\n  return debounceValue;\r\n};\r\n\r\nexport const useArray = <V>(persons: V[]) => {\r\n  const [personList, setPersonList] = useState(persons);\r\n  const add = (value: V) => {\r\n    setPersonList([...personList, value]);\r\n  };\r\n  const clear = () => {\r\n    setPersonList([]);\r\n  };\r\n  const removeIndex = (index: number) => {\r\n    const list = [...personList];\r\n    list.splice(index, 1);\r\n    setPersonList(list);\r\n  };\r\n  return { value: personList, clear, removeIndex, add };\r\n};\r\n\r\n// 项目列表搜索参数\r\nexport const useProjectsSearchParams = () => {\r\n  const [param, setParam] = useUrlQueryParam([\"name\", \"personId\"]);\r\n  return [\r\n    // 依然是解决无限循环、获取数据的问题\r\n    useMemo(\r\n      () => ({ ...param, personId: Number(param.personId) || undefined }),\r\n      [param]\r\n    ),\r\n    setParam,\r\n  ] as const;\r\n};\r\n\r\nexport const useProjectsQueryKey = () => {\r\n  const [params] = useProjectsSearchParams();\r\n  return [\"projects\", params];\r\n};\r\n\r\n/**\r\n * 管理模态框状态的hook\r\n * @returns projectModalOpen: 开关状态; open: 打开模态框方法; close: 关闭模态框方法\r\n */\r\nexport const useProjectModal = () => {\r\n  const [{ projectCreate }, setProjectCreate] = useUrlQueryParam([\r\n    \"projectCreate\",\r\n  ]);\r\n\r\n  const [{ editingProjectId }, setEditintProjectId] = useUrlQueryParam([\r\n    \"editingProjectId\",\r\n  ]);\r\n\r\n  const setUrlParams = useSetUrlSearchParams();\r\n  const { data: editingProject, isLoading } = useProjectDetail(\r\n    Number(editingProjectId)\r\n  );\r\n  const open = () => setProjectCreate({ projectCreate: true });\r\n  const close = () => setUrlParams({ projectCreate: \"\", editingProjectId: \"\" });\r\n  const startEdit = (id: number) =>\r\n    setEditintProjectId({ editingProjectId: id });\r\n\r\n  return {\r\n    // 从 url 获取到的变量，都是string类型\r\n    projectModalOpen: projectCreate === \"true\" || !!editingProjectId,\r\n    open,\r\n    close,\r\n    startEdit,\r\n    editingProject,\r\n    isLoading,\r\n  };\r\n};\r\n","import { useEffect, useRef } from \"react\";\n\nexport const useDocumentTitle = (\n  title: string,\n  keepOnUnmount: boolean = true\n) => {\n  const oldTitle = useRef(document.title).current;\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  // 组件销毁时执行下面方法\n  useEffect(() => {\n    return () => {\n      if (!keepOnUnmount) {\n        document.title = oldTitle;\n      }\n    };\n  }, [keepOnUnmount, oldTitle]);\n};\n\n// 重置路由状态 + 刷新整个页面\nexport const resetRoute = () => (window.location.href = window.location.origin);\n\n/**\n * 返回组件的挂载状态，如果还没挂载，或 已经卸载，返回false；否则，返回true\n */\nexport const useMountedRef = () => {\n  const mountedRef = useRef(false);\n  useEffect(() => {\n    // 挂载成功，是true\n    mountedRef.current = true;\n    // 卸载\n    return () => {\n      mountedRef.current = false;\n    };\n  });\n  return mountedRef;\n};\n","import { useCallback, useReducer, useState } from \"react\";\r\nimport { useMountedRef } from \"utils\";\r\n\r\ninterface State<D> {\r\n  error: Error | null;\r\n  data: D | null;\r\n  stat: \"idle\" | \"loading\" | \"error\" | \"success\";\r\n}\r\nconst defaultInitialState: State<null> = {\r\n  stat: \"idle\",\r\n  data: null,\r\n  error: null,\r\n};\r\n\r\n// 某个变量的类型，就可以用 typeof\r\nconst defaultConfig = {\r\n  throwOnError: false,\r\n};\r\n\r\nconst useSafeDispatch = <T>(dispatch: (...args: T[]) => void) => {\r\n  const mountedRef = useMountedRef();\r\n  return useCallback(\r\n    (...args: T[]) => (mountedRef.current ? dispatch(...args) : void 0),\r\n    [dispatch, mountedRef]\r\n  );\r\n};\r\n\r\n// 泛型<D>的入口，或者在调用useAsync时传入，或者在调用State时传入\r\nexport const useAsync = <D>(\r\n  initialState?: State<D>,\r\n  initialConfig?: typeof defaultConfig\r\n) => {\r\n  const config = { ...defaultConfig, ...initialConfig };\r\n  // state的类型：<State<D>>\r\n  const [state, dispatch] = useReducer(\r\n    (state: State<D>, action: Partial<State<D>>) => ({ ...state, ...action }),\r\n    {\r\n      ...defaultInitialState,\r\n      ...initialState,\r\n    }\r\n  );\r\n\r\n  const safeDispatch = useSafeDispatch(dispatch);\r\n\r\n  const [retry, setRetry] = useState(() => () => {});\r\n\r\n  // data是D类型\r\n  const setData = useCallback(\r\n    (data: D) =>\r\n      safeDispatch({\r\n        data,\r\n        stat: \"success\",\r\n        error: null,\r\n      }),\r\n    [safeDispatch]\r\n  );\r\n\r\n  const setError = useCallback(\r\n    (error: Error) =>\r\n      safeDispatch({\r\n        error,\r\n        stat: \"error\",\r\n        data: null,\r\n      }),\r\n    [safeDispatch]\r\n  );\r\n\r\n  // run用来触发异步请求\r\n  // Promise里包含的是D类型的数据\r\n  const run = useCallback(\r\n    (promise: Promise<D>, runConfig?: { retry: () => Promise<D> }) => {\r\n      // 没传或者不是promise数据\r\n      if (!promise || !promise.then) {\r\n        throw new Error(\"请输入 Promise类型的数据\");\r\n      }\r\n      setRetry(() => () => {\r\n        // run(promise)时，setRetry更新的函数是run(promise)返回的结果，即新的newPromise，而不是run的入参promise。其实页面时重新渲染的，setData(data)走了一遍\r\n        if (runConfig?.retry) {\r\n          // 要想第一次retry之后，可以继续刷新，runConfig必传\r\n          run(runConfig?.retry(), runConfig);\r\n        }\r\n      });\r\n      // 用到了state，又把state加到依赖里，出现无限循环，用传入函数而不是传入对象的方式，更新state\r\n      safeDispatch({ stat: \"loading\" });\r\n      return promise\r\n        .then((data) => {\r\n          setData(data);\r\n          return data;\r\n        })\r\n        .catch((error) => {\r\n          // catch会消化异常，如果不主动抛出异常，外面是接收不到的\r\n          setError(error);\r\n          if (config.throwOnError) {\r\n            return Promise.reject(error);\r\n          } else {\r\n            return error;\r\n          }\r\n        });\r\n    },\r\n    [config.throwOnError, setData, setError, safeDispatch]\r\n  );\r\n  return {\r\n    isIdle: state.stat === \"idle\",\r\n    isLoading: state.stat === \"loading\",\r\n    isSuccess: state.stat === \"success\",\r\n    isError: state.stat === \"error\",\r\n    run,\r\n    setData,\r\n    setError,\r\n    // 被调用时，重新跑一遍run，让state刷新一遍\r\n    retry,\r\n    ...state,\r\n  };\r\n};\r\n","// 当一个组件中有多个export的项，可以导出为*\nimport * as auth from \"auth-provider\";\nimport { FullPageErrorFallback, FullPageLoading } from \"components/lib\";\nimport { default as React, ReactNode } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport { User } from \"types/User\";\nimport { useMount } from \"screens/project-list/util\";\nimport { http } from \"utils/http\";\nimport { useAsync } from \"utils/use-async\";\n\ninterface AuthForm {\n  username: string;\n  password: string;\n}\n\n// 用type定义类型别名\n// type authForm = {username: string, password: string}\n// 类型别名和interface一般等价使用，但是 在或操作符、utility type时，只能用类型别名实现\n\nconst bootstrapUser = async () => {\n  let user = null;\n  const token = auth.getToken();\n  if (token) {\n    let data = await http(\"me\", { token });\n    user = data.user;\n  }\n  return user;\n};\n\n// createContext 的传参要定义泛型，否则 value={{user, login, register, logout}} 会报错\nconst AuthContext = React.createContext<\n  | {\n      user: User | null;\n      login: (form: AuthForm) => Promise<void>;\n      register: (form: AuthForm) => Promise<void>;\n      logout: () => Promise<void>;\n    }\n  | undefined\n>(undefined);\nAuthContext.displayName = \"AuthContext\";\n\n// 一层一层包裹，向上传递，AuthProvider -> AppProvider -> 顶层index.tsx，这样确保了页面在渲染时，就会执行此处AuthProvider方法体中定义的方法\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const {\n    data: user,\n    error,\n    isLoading,\n    isIdle,\n    isError,\n    run,\n    setData: setUser,\n  } = useAsync<User | null>();\n  const queryClient = useQueryClient();\n\n  // then方法里,setUser 等价于 (user) => setUser(user); 函数式编程的point free概念\n  const login = (form: AuthForm) => auth.login(form).then(setUser);\n  const register = (form: AuthForm) => auth.register(form).then(setUser);\n  const logout = () =>\n    auth.logout().then(() => {\n      setUser(null);\n      queryClient.clear();\n    });\n\n  // 整个App加载的时候，去获取用户数据\n  useMount(() => {\n    run(bootstrapUser());\n  });\n\n  if (isIdle || isLoading) {\n    return <FullPageLoading></FullPageLoading>;\n  }\n\n  if (isError) {\n    return <FullPageErrorFallback error={error} />;\n  }\n\n  return (\n    <AuthContext.Provider\n      children={children}\n      value={{ user, login, register, logout }}\n    />\n  );\n};\n\n// 其他组件要访问login等，直接通过调用useAuth()访问\nexport const useAuth = () => {\n  const context = React.useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth必须在AuthProvider中使用\");\n  }\n  // 对象，包含四个属性：login,logout,user,register\n  return context;\n};\n\n/* \n使用 useContext 时，数据的传递过程：\n\t1. 通过React.createContext(undefined) 初始化 AuthContext\n\t2. <AuthContext.Provider>组件通过传入value属性，更新 AuthContext（新AuthContext里包含login，logout，user等信息）\n\t3. <App>被包裹在 <AuthContext.Provider>\n\t4. 编写自定义Hook  useAuth，通过useContext读取 新的 AuthContext，并返回出去\n\t5. 在<App>的组件中，通过调用useAuth，读取 新的 AuthContext，比如：const { logout, user } = useAuth();\n\t6. 使用解析出来的logout，user 等\n\n*/\n","import { User } from \"types/User\";\nimport { useHttp } from \"./http\";\nimport { useQuery } from \"react-query\";\n\n// 获取用户信息的hook\nexport const useUser = (param?: Partial<User>) => {\n  const client = useHttp();\n  return useQuery<User[]>([\"users\", param], () =>\n    client(\"users\", { data: param })\n  );\n};\n","import { Select } from \"antd\";\r\nimport { Raw } from \"types\";\r\n\r\ntype SelectProps = React.ComponentProps<typeof Select>;\r\n\r\n// 将自己定义的props从SelectProps中删掉\r\n// 不知\r\ninterface IdSelectProps\r\n  extends Omit<SelectProps, \"value\" | \"onChange\" | \"options\"> {\r\n  value?: Raw | null | undefined;\r\n  onChange?: (value?: number) => void; // onChange的入参如果存在，都是number类型\r\n  defaultOptionName?: string;\r\n  options?: { name: string; id: number }[];\r\n}\r\n/**\r\n * value 可以传入多种类型的值\r\n * onChange 只会回调 number|undefined类型\r\n * 当isNaN(Number(value)) 为true的时候，代表选择默认类型\r\n * 当选择默认类型的时候，onChange会回调undefined\r\n * @param props\r\n */\r\nexport const IdSelect = (props: IdSelectProps) => {\r\n  const { value, onChange, defaultOptionName, options, ...restProps } = props;\r\n  return (\r\n    <Select\r\n      // options取到的时候，传value；没取到，传0\r\n      value={options?.length ? toNumber(value) : 0}\r\n      onChange={(value) => onChange?.(toNumber(value) || undefined)}\r\n      {...restProps}\r\n    >\r\n      {defaultOptionName ? (\r\n        <Select.Option value={0}>{defaultOptionName}</Select.Option>\r\n      ) : null}\r\n      {options?.map((option) => (\r\n        <Select.Option value={option.id} key={option.id}>\r\n          {option.name}\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nconst toNumber = (value: unknown) => (isNaN(Number(value)) ? 0 : Number(value));\r\n","import React from \"react\";\r\nimport { useUser } from \"utils/user\";\r\nimport { IdSelect } from \"./id-select\";\r\n\r\nexport const UserSelect = (props: React.ComponentProps<typeof IdSelect>) => {\r\n  const { data: users } = useUser();\r\n  return <IdSelect options={users || []} {...props} />;\r\n};\r\n","/* @jsxImportSource @emotion/react */\nimport { Form, Input } from \"antd\";\nimport { UserSelect } from \"components/user-select\";\nimport { List } from \"../../types/List\";\nimport { User } from \"../../types/User\";\n\ninterface SearchPanelProps {\n  users: User[];\n  param: Partial<Pick<List, \"name\" | \"personId\">>;\n  setParam: (param: SearchPanelProps[\"param\"]) => void;\n}\nexport const SearchPanel = ({ param, setParam, users }: SearchPanelProps) => {\n  return (\n    // emotion行内样式\n    <Form css={{ marginBottom: \"2rem\" }} layout={\"inline\"}>\n      <Form.Item>\n        <Input\n          type=\"text\"\n          value={param.name}\n          onChange={(evt) =>\n            setParam({\n              ...param,\n              name: evt.target.value,\n            })\n          }\n        />\n      </Form.Item>\n      <Form.Item>\n        <UserSelect\n          defaultOptionName={\"负责人\"}\n          value={param.personId}\n          onChange={(value) =>\n            setParam({\n              ...param,\n              personId: value,\n            })\n          }\n        ></UserSelect>\n      </Form.Item>\n    </Form>\n  );\n};\n","import { Rate } from \"antd\";\r\n\r\ninterface PinProps extends React.ComponentProps<typeof Rate> {\r\n  checked: boolean;\r\n  onCheckedChange?: (checked: boolean) => void;\r\n}\r\n\r\nexport const Pin = (props: PinProps) => {\r\n  const { checked, onCheckedChange, ...restProps } = props;\r\n  return (\r\n    <Rate\r\n      count={1}\r\n      value={checked ? 1 : 0}\r\n      onChange={(num) => onCheckedChange?.(!!num)}\r\n      {...restProps}\r\n    />\r\n  );\r\n};\r\n","import { Dropdown, Menu, Modal, Table, TableProps } from \"antd\";\nimport dayjs from \"dayjs\";\nimport { User } from \"../../types/User\";\nimport { Link } from \"react-router-dom\";\nimport { Pin } from \"components/pin\";\nimport { useDeleteProject, useEditProject } from \"utils/project\";\nimport { ButtonNoPadding } from \"components/lib\";\nimport { useProjectModal, useProjectsQueryKey } from \"./util\";\nimport { List } from \"../../types/List\";\n// 用添加isLoading的方式加loading，这个extends是最重要的\ninterface TableListProps extends TableProps<List> {\n  users: User[];\n}\n// 将表格替换为antd组件形式\n// 剩下的键值都放在props里, 如果用类型别名定义props的类型则如下PropsType：\n// type PropsType = Omit<TableListProps, 'users'>\nexport const TableList = ({ users, ...props }: TableListProps) => {\n  // useEditProject是react hook，只能在顶层调用，而mutate是纯函数，不受此规则限制\n  const { mutate } = useEditProject(useProjectsQueryKey());\n  // 函数式编程，point free的写法\n  const pinProject = (id: number) => (pin: boolean) => mutate({ id, pin });\n\n  return (\n    <Table\n      columns={[\n        {\n          title: <Pin checked={true} disabled={true}></Pin>,\n          render(value, project) {\n            return (\n              <Pin\n                checked={project.pin}\n                onCheckedChange={pinProject(project.id)}\n              />\n            );\n          },\n        },\n        {\n          title: \"名称\",\n          dataIndex: \"name\",\n          sorter: (a, b) => a.name.localeCompare(b.name),\n          render(value, project) {\n            return <Link to={String(project.id)}>{project.name}</Link>;\n          },\n        },\n        {\n          title: \"部门\",\n          dataIndex: \"organization\",\n        },\n        {\n          title: \"负责人\",\n          render(value, project) {\n            return (\n              users.find((user: User) => user.id === project.personId)?.name ||\n              \"未知\"\n            );\n          },\n        },\n        {\n          title: \"创建时间\",\n          render(value, project) {\n            return (\n              <span>\n                {project.created\n                  ? dayjs(project.created).format(\"YYYY-MM-DD HH:mm:ss\")\n                  : \"--\"}\n              </span>\n            );\n          },\n        },\n        {\n          render(value, project) {\n            return <More project={project} />;\n          },\n        },\n      ]}\n      pagination={false}\n      rowKey={(record) => record.id}\n      {...props}\n    ></Table>\n  );\n};\n\nconst More = ({ project }: { project: List }) => {\n  const { startEdit } = useProjectModal();\n  const editProject = (id: number) => () => startEdit(id);\n  const { mutate: deleteProject } = useDeleteProject(useProjectsQueryKey());\n  const confirmDeleteProject = (id: number) => {\n    Modal.confirm({\n      title: \"确定删除这个项目吗？\",\n      content: \"点击确定删除\",\n      okText: \"确定\",\n      onOk() {\n        deleteProject({ id });\n      },\n    });\n  };\n  return (\n    <Dropdown\n      overlay={\n        <Menu>\n          <Menu.Item onClick={editProject(project.id)} key={\"edit\"}>\n            编辑\n          </Menu.Item>\n          <Menu.Item\n            onClick={() => confirmDeleteProject(project.id)}\n            key={\"delete\"}\n          >\n            删除\n          </Menu.Item>\n        </Menu>\n      }\n    >\n      <ButtonNoPadding type={\"link\"}>...</ButtonNoPadding>\n    </Dropdown>\n  );\n};\n","import { SearchPanel } from \"./search-panel\";\nimport { TableList } from \"./table-list\";\nimport { useDebounce, useProjectModal, useProjectsSearchParams } from \"./util\";\nimport styled from \"@emotion/styled\";\nimport { useProject } from \"utils/project\";\nimport { useUser } from \"utils/user\";\nimport { useDocumentTitle } from \"utils\";\nimport { ButtonNoPadding, ErrorBox, Row } from \"components/lib\";\nexport const ProjectList = () => {\n  const { open } = useProjectModal();\n  useDocumentTitle(\"项目列表\", false);\n  // 基本类型，可以放到依赖里;组件状态，可以放到依赖里；非组件状态的对象，绝对不可以放到依赖里\n  const [param, setParam] = useProjectsSearchParams();\n  // useProject 在调用时，传了queryKey\n  const { isLoading, error, data: list } = useProject(useDebounce(param, 500));\n  const { data: users } = useUser();\n\n  return (\n    <Container>\n      <Row between={true}>\n        <h1>项目列表</h1>\n        <ButtonNoPadding onClick={open} type={\"link\"}>\n          创建项目\n        </ButtonNoPadding>\n      </Row>\n      {/* 泛型，不指定类型，根据传入的值，动态判断类型 */}\n      <SearchPanel param={param} users={users || []} setParam={setParam} />\n      <ErrorBox error={error}></ErrorBox>\n      {/* dataSource,loading, users，透传给了TableList组件，除了users，其他两个都被TableList组件以props属性接收 */}\n      {/* 从useAsync的定义中可知，list有可能是null，因此是 list || [] */}\n      <TableList\n        dataSource={list || []}\n        users={users || []}\n        loading={isLoading}\n      />\n    </Container>\n  );\n};\n\n// 只跟踪 ProjectList 组件\nProjectList.whyDidYouRender = false;\n/* // 上面的 ProjectList.whyDidYouRender = true 相当于下面的内容：\nclass ProjectList extends React.Component<any, any>{\n  static whyDidYouRender = true\n} */\n\nconst Container = styled.div`\n  padding: 3.2rem;\n  flex: 1;\n`;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n  x1: \"97.6553341%\",\n  y1: \"35.6591143%\",\n  x2: \"37.202032%\",\n  y2: \"75.4891864%\",\n  id: \"uid392-1\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"#0052CC\",\n  offset: \"7%\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"#2684FF\",\n  offset: \"100%\"\n})), /*#__PURE__*/React.createElement(\"linearGradient\", {\n  x1: \"8.43371138%\",\n  y1: \"60.1495759%\",\n  x2: \"64.1161517%\",\n  y2: \"23.5790285%\",\n  id: \"uid392-2\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"#0052CC\",\n  offset: \"0%\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"#2684FF\",\n  offset: \"100%\"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  stroke: \"none\",\n  strokeWidth: 1,\n  fillRule: \"nonzero\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.3881081,27.9242105 C12.4881804,26.8071817 13.1062496,25.2917664 13.1062496,23.7115789 C13.1062496,22.1313915 12.4881804,20.6159762 11.3881081,19.4989474 L11.3881081,19.4989474 L3.74837838,11.7621053 L0.273513514,15.2926316 C-0.0900771727,15.6625064 -0.0900771727,16.2617042 0.273513514,16.6315789 L11.3881081,27.9242105 L11.3881081,27.9242105 Z\",\n  fill: \"currentColor\",\n  fillRule: \"nonzero\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M22.5027027,15.2926316 L11.3881081,4 L11.3881081,4 L11.3539189,4.03473684 L11.3539189,4.03473684 C9.08852466,6.36456187 9.09963243,10.1156459 11.3787838,12.4315789 L19.0247297,20.1652632 L22.5027027,16.6315789 C22.8662934,16.2617042 22.8662934,15.6625064 22.5027027,15.2926316 Z\",\n  fill: \"currentColor\",\n  fillRule: \"nonzero\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.3881081,12.4252632 C9.10895676,10.1093301 9.09784899,6.35824608 11.3632432,4.02842105 L3.43445946,12.0810526 L7.58067568,16.2936842 L11.3881081,12.4252632 Z\",\n  fill: \"url(#uid392-1)\",\n  fillRule: \"nonzero\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.1893243,15.6368421 L11.3881081,19.4989474 C12.4881804,20.6159762 13.1062496,22.1313915 13.1062496,23.7115789 C13.1062496,25.2917664 12.4881804,26.8071817 11.3881081,27.9242105 L19.3355405,19.8494737 L15.1893243,15.6368421 Z\",\n  fill: \"url(#uid392-2)\",\n  fillRule: \"nonzero\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M36.07,18.956 C36.07,20.646 35.394,21.842 33.418,21.842 C32.56,21.842 31.702,21.686 31,21.4 L31,23.662 C31.65,23.896 32.586,24.104 33.808,24.104 C37.032,24.104 38.41,21.946 38.41,18.8 L38.41,6.918 L36.07,6.918 L36.07,18.956 Z M41.894,7.568 C41.894,8.556 42.544,9.128 43.454,9.128 C44.364,9.128 45.014,8.556 45.014,7.568 C45.014,6.58 44.364,6.008 43.454,6.008 C42.544,6.008 41.894,6.58 41.894,7.568 Z M42.31,24 L44.546,24 L44.546,11 L42.31,11 L42.31,24 Z M47.926,24 L50.11,24 L50.11,16.33 C50.11,13.574 51.852,12.716 54.712,13.002 L54.712,10.818 C52.164,10.662 50.864,11.754 50.11,13.288 L50.11,11 L47.926,11 L47.926,24 Z M65.45,24 L65.45,21.66 C64.618,23.376 63.058,24.26 61.056,24.26 C57.598,24.26 55.856,21.322 55.856,17.5 C55.856,13.834 57.676,10.74 61.316,10.74 C63.214,10.74 64.67,11.598 65.45,13.288 L65.45,11 L67.686,11 L67.686,24 L65.45,24 Z M58.092,17.5 C58.092,20.62 59.34,22.18 61.654,22.18 C63.656,22.18 65.45,20.906 65.45,18.02 L65.45,16.98 C65.45,14.094 63.812,12.82 61.914,12.82 C59.392,12.82 58.092,14.484 58.092,17.5 Z M86.926,19.294 C86.926,16.226 84.898,15.056 81.284,14.146 C78.268,13.392 77.176,12.69 77.176,11.286 C77.176,9.726 78.502,8.946 80.738,8.946 C82.506,8.946 84.352,9.258 86.068,10.246 L86.068,7.906 C84.898,7.256 83.312,6.658 80.842,6.658 C76.864,6.658 74.836,8.634 74.836,11.286 C74.836,14.094 76.552,15.42 80.4,16.356 C83.65,17.136 84.586,17.942 84.586,19.45 C84.586,20.958 83.624,21.972 81.05,21.972 C78.788,21.972 76.344,21.374 74.758,20.542 L74.758,22.934 C76.084,23.61 77.618,24.26 80.92,24.26 C85.158,24.26 86.926,22.258 86.926,19.294 Z M95.09,24.26 C91.19,24.26 88.902,21.374 88.902,17.474 C88.902,13.574 91.19,10.74 95.09,10.74 C98.964,10.74 101.226,13.574 101.226,17.474 C101.226,21.374 98.964,24.26 95.09,24.26 Z M95.09,12.82 C92.308,12.82 91.086,15.004 91.086,17.474 C91.086,19.944 92.308,22.18 95.09,22.18 C97.846,22.18 99.042,19.944 99.042,17.474 C99.042,15.004 97.846,12.82 95.09,12.82 Z M106.92,9.622 C106.92,8.452 107.596,7.646 108.974,7.646 C109.494,7.646 109.988,7.698 110.378,7.776 L110.378,5.722 C109.988,5.618 109.546,5.514 108.87,5.514 C106.088,5.514 104.736,7.152 104.736,9.57 L104.736,11 L102.63,11 L102.63,13.08 L104.736,13.08 L104.736,24 L106.92,24 L106.92,13.08 L110.274,13.08 L110.274,11 L106.92,11 L106.92,9.622 Z M115.786,19.892 L115.786,13.08 L119.244,13.08 L119.244,11 L115.786,11 L115.786,8.244 L113.602,8.244 L113.602,11 L111.496,11 L111.496,13.08 L113.602,13.08 L113.602,19.944 C113.602,22.362 114.954,24 117.736,24 C118.412,24 118.854,23.896 119.244,23.792 L119.244,21.634 C118.854,21.712 118.36,21.816 117.84,21.816 C116.462,21.816 115.786,21.036 115.786,19.892 Z M125.432,24 L128.292,24 L130.528,17.708 L131.724,13.704 L132.92,17.708 L135.156,24 L138.016,24 L142.8,11 L140.33,11 L136.586,22.024 L132.79,11 L130.658,11 L126.862,22.024 L123.118,11 L120.648,11 L125.432,24 Z M153.538,24 L153.538,21.66 C152.706,23.376 151.146,24.26 149.144,24.26 C145.686,24.26 143.944,21.322 143.944,17.5 C143.944,13.834 145.764,10.74 149.404,10.74 C151.302,10.74 152.758,11.598 153.538,13.288 L153.538,11 L155.774,11 L155.774,24 L153.538,24 Z M146.18,17.5 C146.18,20.62 147.428,22.18 149.742,22.18 C151.744,22.18 153.538,20.906 153.538,18.02 L153.538,16.98 C153.538,14.094 151.9,12.82 150.002,12.82 C147.48,12.82 146.18,14.484 146.18,17.5 Z M159.154,24 L161.338,24 L161.338,16.33 C161.338,13.574 163.08,12.716 165.94,13.002 L165.94,10.818 C163.392,10.662 162.092,11.754 161.338,13.288 L161.338,11 L159.154,11 L159.154,24 Z M178.108,23.48 C177.042,24.052 175.404,24.26 174.078,24.26 C169.216,24.26 167.084,21.452 167.084,17.474 C167.084,13.548 169.268,10.74 173.22,10.74 C177.224,10.74 178.836,13.522 178.836,17.474 L178.836,18.488 L169.346,18.488 C169.658,20.698 171.088,22.128 174.156,22.128 C175.664,22.128 176.938,21.842 178.108,21.426 L178.108,23.48 Z M173.116,12.768 C170.75,12.768 169.554,14.302 169.32,16.564 L176.574,16.564 C176.444,14.146 175.352,12.768 173.116,12.768 Z\",\n  fill: \"inherit\",\n  fillRule: \"evenodd\"\n}));\n\nfunction SvgSoftwareLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 179 32\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    focusable: \"false\",\n    \"aria-hidden\": \"true\",\n    className: \"css-sq9aeg-Logo\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSoftwareLogo);\nexport default __webpack_public_path__ + \"static/media/software-logo.8043cb5b.svg\";\nexport { ForwardRef as ReactComponent };","import { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { Task } from \"types/task\";\nimport { useHttp } from \"./http\";\nimport { SortProps } from \"./kanban\";\nimport {\n  useAddConfig,\n  useDeleteConfig,\n  useEditConfig,\n  useReorderTaskConfig,\n} from \"./use-optimistic-options\";\n\n// 获取任务信息的hook\nexport const useTasks = (param?: Partial<Task>) => {\n  const client = useHttp();\n  return useQuery<Task[]>([\"tasks\", param], () =>\n    client(\"tasks\", { data: param })\n  );\n};\n\nexport const useAddTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (params: Partial<Task>) =>\n      client(`tasks`, {\n        data: params,\n        method: \"POST\",\n      }),\n    useAddConfig(queryKey)\n  );\n};\n\n// 获取task的详情\nexport const useTask = (id?: number) => {\n  const client = useHttp();\n  return useQuery<Task>([\"task\", { id }], () => client(`tasks/${id}`), {\n    enabled: !!id,\n  });\n};\n\n// 编辑task\nexport const useEditTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (params: Partial<Task>) =>\n      client(`tasks/${params.id}`, {\n        method: \"PATCH\",\n        data: params,\n      }),\n    useEditConfig(queryKey)\n  );\n};\n\nexport const useDeleteTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    ({ id }: { id: number }) =>\n      client(`tasks/${id}`, {\n        method: \"DELETE\",\n      }),\n    useDeleteConfig(queryKey)\n  );\n};\n\nexport const useReorderTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation((params: SortProps) => {\n    return client(\"tasks/reorder\", {\n      data: params,\n      method: \"POST\",\n    });\n  }, useReorderTaskConfig(queryKey));\n};\n","import { useCallback, useMemo } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useProjectDetail } from \"utils/project\";\r\nimport { useTask } from \"utils/task\";\r\nimport { useUrlQueryParam } from \"utils/url\";\r\n\r\nexport const useProjectIdInUrl = () => {\r\n  const { pathname } = useLocation();\r\n  // pathname.match('/projects\\/{\\d+}') 返回数组，第0项，是/projects/11，第1项是子项\r\n  const id = pathname.match(/projects\\/(\\d+)/)?.[1];\r\n  return Number(id);\r\n};\r\n\r\nexport const useProjectInUrl = () => {\r\n  return useProjectDetail(useProjectIdInUrl());\r\n};\r\n\r\nexport const useKanbanSearchParams = () => ({ projectId: useProjectIdInUrl() });\r\n\r\n// useKanbansQueryKey如果取值不对，则react-query的key不对，这会导致用到QueryKey的地方，也会不对，比如 useAddConfig 会失效\r\nexport const useKanbansQueryKey = () => [\"kanbans\", useKanbanSearchParams()];\r\n\r\nexport const useTasksSearchParams = () => {\r\n  const [param] = useUrlQueryParam([\"name\", \"typeId\", \"processorId\", \"tagId\"]);\r\n  const projectId = useProjectIdInUrl();\r\n  return useMemo(\r\n    () => ({\r\n      projectId,\r\n      typeId: Number(param.typeId) || undefined,\r\n      processorId: Number(param.processorId) || undefined,\r\n      tagId: Number(param.tagId) || undefined,\r\n      name: param.name,\r\n    }),\r\n    [projectId, param]\r\n  );\r\n};\r\n\r\nexport const useTasksQueryKey = () => [\"tasks\", useTasksSearchParams()];\r\n\r\nexport const useTasksModal = () => {\r\n  const [{ editingTaskId }, setEditingTaskId] = useUrlQueryParam([\r\n    \"editingTaskId\",\r\n  ]);\r\n  const { data: editingTask, isLoading } = useTask(Number(editingTaskId));\r\n  // startEdit 和 close 作为方法，都要return出去，所以都要包一层useCallback\r\n  // 开始编辑\r\n  const startEdit = useCallback(\r\n    (id: number) => {\r\n      setEditingTaskId({ editingTaskId: id });\r\n    },\r\n    [setEditingTaskId]\r\n  );\r\n  // 关闭模态框\r\n  const close = useCallback(() => {\r\n    setEditingTaskId({ editingTaskId: \"\" });\r\n  }, [setEditingTaskId]);\r\n  return {\r\n    editingTaskId,\r\n    editingTask,\r\n    startEdit,\r\n    close,\r\n    isLoading,\r\n  };\r\n};\r\n","import { useProjectIdInUrl } from \"screens/kanban/util\";\n\nexport const useEpicSearchParams = () => ({ projectId: useProjectIdInUrl() });\n\nexport const useEpicsQueryKey = () => [\"epics\", useEpicSearchParams()];\n","import styled from \"@emotion/styled\";\nimport { Button, Drawer, DrawerProps, Form, Input, Spin } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { ErrorBox } from \"components/lib\";\nimport { useEffect } from \"react\";\nimport { useProjectIdInUrl } from \"screens/kanban/util\";\nimport { useAddEpic } from \"utils/epic\";\nimport { useEpicsQueryKey } from \"./util\";\nexport const CreateEpic = (\n  props: Pick<DrawerProps, \"visible\"> & { onClose: () => void }\n) => {\n  const { mutate: addEpic, isLoading, error } = useAddEpic(useEpicsQueryKey());\n  const [form] = useForm();\n  const projectId = useProjectIdInUrl();\n\n  const onFinish = async (values: any) => {\n    await addEpic({ ...values, projectId });\n    props.onClose();\n  };\n\n  // 当form 或者props.visible改变时，重置form\n  useEffect(() => {\n    form.resetFields();\n  }, [form, props.visible]);\n\n  return (\n    <Drawer\n      visible={props.visible}\n      onClose={props.onClose}\n      forceRender={true}\n      destroyOnClose={true}\n      width={\"100%\"}\n    >\n      <Container>\n        {isLoading ? (\n          <Spin size={\"large\"}></Spin>\n        ) : (\n          <>\n            <h1>创建任务组</h1>\n            <ErrorBox error={error}></ErrorBox>\n            <Form\n              form={form}\n              layout={\"vertical\"}\n              style={{ width: \"40rem\" }}\n              onFinish={onFinish}\n            >\n              <Form.Item\n                label={\"名称\"}\n                name={\"name\"}\n                rules={[{ required: true, message: \"请输入任务组名\" }]}\n              >\n                <Input placeholder={\"请输入任务组名称\"}></Input>\n              </Form.Item>\n              <Form.Item style={{ textAlign: \"right\" }}>\n                <Button\n                  loading={isLoading}\n                  type={\"primary\"}\n                  htmlType={\"submit\"}\n                >\n                  提交\n                </Button>\n              </Form.Item>\n            </Form>\n          </>\n        )}\n      </Container>\n    </Drawer>\n  );\n};\n\nconst Container = styled.div`\n  height: 80vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { Epic } from \"types/epic\";\nimport { useHttp } from \"./http\";\nimport { useAddConfig, useDeleteConfig } from \"./use-optimistic-options\";\n\n// 获取看板信息的hook\nexport const useEpics = (param?: Partial<Epic>) => {\n  const client = useHttp();\n  return useQuery<Epic[]>([\"epics\", param], () =>\n    client(\"epics\", { data: param })\n  );\n};\n\nexport const useAddEpic = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (params: Partial<Epic>) =>\n      client(`epics`, {\n        data: params,\n        method: \"POST\",\n      }),\n    useAddConfig(queryKey)\n  );\n};\n\nexport const useDeleteEpic = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    ({ id }: { id: number }) =>\n      client(`epics/${id}`, {\n        method: \"DELETE\",\n      }),\n    useDeleteConfig(queryKey)\n  );\n};\n","import { Button, List, Modal } from \"antd\";\nimport { Row, ScreenContainer } from \"components/lib\";\nimport dayjs from \"dayjs\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useProjectInUrl } from \"screens/kanban/util\";\nimport { Epic } from \"types/epic\";\nimport { useDeleteEpic, useEpics } from \"utils/epic\";\nimport { useTasks } from \"utils/task\";\nimport { CreateEpic } from \"./create-epic\";\nimport { useEpicSearchParams, useEpicsQueryKey } from \"./util\";\n\nexport const EpicScreen = () => {\n  const { data: currentProject } = useProjectInUrl();\n  const { data: epics } = useEpics(useEpicSearchParams());\n  const { data: tasks } = useTasks({ projectId: currentProject?.id });\n  const { mutate: deleteEpic } = useDeleteEpic(useEpicsQueryKey());\n  const [epicCreateOpen, setEpicCreateOpen] = useState(false);\n\n  const confirmDeleteProject = (epic: Epic) => {\n    Modal.confirm({\n      title: `确定要删除向剧组：${epic.name}？`,\n      content: \"点击确定删除\",\n      okText: \"确定\",\n      onOk() {\n        deleteEpic({ id: epic.id });\n      },\n    });\n  };\n\n  return (\n    <ScreenContainer>\n      <Row between={true}>\n        <h1>{currentProject?.name}-任务组</h1>\n        <Button onClick={() => setEpicCreateOpen(true)} type={\"link\"}>\n          创建任务组\n        </Button>\n      </Row>\n      <List\n        style={{ overflowY: \"scroll\" }}\n        dataSource={epics}\n        itemLayout={\"vertical\"}\n        renderItem={(epic) => (\n          <List.Item>\n            <List.Item.Meta\n              title={\n                <Row between={true}>\n                  <span>{epic.name}</span>\n                  <Button\n                    type={\"link\"}\n                    onClick={() => confirmDeleteProject(epic)}\n                  >\n                    删除\n                  </Button>\n                </Row>\n              }\n              description={\n                <div>\n                  <div>开始时间: {dayjs(epic.start).format(\"YYYY-MM-DD\")}</div>\n                  <div>结束时间: {dayjs(epic.end).format(\"YYYY-MM-DD\")}</div>\n                </div>\n              }\n            ></List.Item.Meta>\n            <div>\n              {tasks\n                ?.filter((task) => task.epicId === epic.id)\n                .map((task) => (\n                  <Link\n                    to={`/projects/${currentProject?.id}/kanban?editingTaskId=${task.id}`}\n                    key={task.id}\n                    style={{ display: \"block\" }}\n                  >\n                    {task.name}\n                  </Link>\n                ))}\n            </div>\n          </List.Item>\n        )}\n      ></List>\n      <CreateEpic\n        onClose={() => setEpicCreateOpen(false)}\n        visible={epicCreateOpen}\n      ></CreateEpic>\n    </ScreenContainer>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport {\n  Draggable,\n  DraggableProps,\n  Droppable,\n  DroppableProps,\n  DroppableProvided,\n  DroppableProvidedProps,\n} from \"react-beautiful-dnd\";\n\n// 去掉DroppableProps自身的children属性(从index.d.ts中可以看到，它的类型是一个函数)，添加自己定义的children属性(它的类型是ReactNode型)\ntype DropProps = Omit<DroppableProps, \"children\"> & { children: ReactNode };\n\nexport const Drop = ({ children, ...props }: DropProps) => {\n  // 本地没有安装types文件时，是没有代码提示的 yarn add @types/react-beautiful-dnd -D\n  return (\n    <Droppable {...props}>\n      {(provided) => {\n        if (React.isValidElement(children)) {\n          // children 是Drop的子元素，cloneElement的第二个参数是给元素加props\n          // 连贯起来： 将children元素克隆一下，并且在克隆后的元素上加上props\n          // 加了props后，子元素children不用在显示的传递props\n          return React.cloneElement(children, {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            provided,\n          });\n        }\n        return <div></div>;\n      }}\n    </Droppable>\n  );\n};\n\n// DroppableProvided 是 provided的类型； DroppableProvidedProps 是 droppableProps 的类型\ntype DropChildProps = Partial<\n  { provided: DroppableProvided } & DroppableProvidedProps\n> &\n  React.HTMLAttributes<HTMLDivElement>;\n\n// forwardRef 让用户可以传入ref属性\nexport const DropChild = React.forwardRef<HTMLDivElement, DropChildProps>(\n  ({ children, ...props }, ref) => (\n    <div ref={ref} {...props}>\n      {children}\n      {props.provided?.placeholder}\n    </div>\n  )\n);\n\ntype DragProps = Omit<DraggableProps, \"children\"> & { children: ReactNode };\nexport const Drag = ({ children, ...props }: DragProps) => {\n  return (\n    <Draggable {...props}>\n      {(provided) => {\n        if (React.isValidElement(children)) {\n          return React.cloneElement(children, {\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            ref: provided.innerRef,\n          });\n        }\n        return <div></div>;\n      }}\n    </Draggable>\n  );\n};\n","// 获取task type列表\r\nimport { useQuery } from \"react-query\";\r\nimport { TaskType } from \"types/task-type\";\r\nimport { useHttp } from \"./http\";\r\n\r\nexport const useTaskTypes = () => {\r\n  const client = useHttp();\r\n  return useQuery<TaskType[]>([\"taskTypes\"], () => client(\"taskTypes\"));\r\n};\r\n","import React from \"react\";\r\nimport { useTaskTypes } from \"utils/task-type\";\r\nimport { IdSelect } from \"./id-select\";\r\n\r\nexport const TaskTypeSelect = (\r\n  props: React.ComponentProps<typeof IdSelect>\r\n) => {\r\n  const { data: taskTypes } = useTaskTypes();\r\n  return <IdSelect options={taskTypes || []} {...props} />;\r\n};\r\n","import { Button, Input } from \"antd\";\r\nimport { Row } from \"components/lib\";\r\nimport { TaskTypeSelect } from \"components/task-type-select\";\r\nimport { UserSelect } from \"components/user-select\";\r\nimport { useSetUrlSearchParams } from \"utils/url\";\r\nimport { useTasksSearchParams } from \"./util\";\r\n\r\nexport const SearchPanel = () => {\r\n  const searchParams = useTasksSearchParams();\r\n  const setSearchParams = useSetUrlSearchParams();\r\n  // 重置\r\n  const reset = () => {\r\n    setSearchParams({\r\n      typeId: undefined,\r\n      processorId: undefined,\r\n      tagId: undefined,\r\n      name: undefined,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Row marginBottom={10} gap={true}>\r\n      <Input\r\n        style={{ width: \"20rem\" }}\r\n        placeholder={\"任务名\"}\r\n        value={searchParams.name}\r\n        onChange={(evt) => setSearchParams({ name: evt.target.value })}\r\n      ></Input>\r\n      <UserSelect\r\n        defaultOptionName={\"经办人\"}\r\n        value={searchParams.processorId}\r\n        onChange={(value) => setSearchParams({ processorId: value })}\r\n      ></UserSelect>\r\n      <TaskTypeSelect\r\n        defaultOptionName={\"类型\"}\r\n        value={searchParams.typeId}\r\n        onChange={(value) => setSearchParams({ typeId: value })}\r\n      ></TaskTypeSelect>\r\n      <Button onClick={reset}>清除筛选器</Button>\r\n    </Row>\r\n  );\r\n};\r\n","import { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { Kanban } from \"types/kanban\";\nimport { useHttp } from \"./http\";\nimport {\n  useAddConfig,\n  useDeleteConfig,\n  useReorderKanbanConfig,\n} from \"./use-optimistic-options\";\n\n// 获取看板信息的hook\nexport const useKanbans = (param?: Partial<Kanban>) => {\n  const client = useHttp();\n  return useQuery<Kanban[]>([\"kanbans\", param], () =>\n    client(\"kanbans\", { data: param })\n  );\n};\n\nexport const useAddKanban = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (params: Partial<Kanban>) =>\n      client(`kanbans`, {\n        data: params,\n        method: \"POST\",\n      }),\n    useAddConfig(queryKey)\n  );\n};\n\nexport const useDeleteKanban = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    ({ id }: { id: number }) =>\n      client(`kanbans/${id}`, {\n        method: \"DELETE\",\n      }),\n    useDeleteConfig(queryKey)\n  );\n};\n\nexport interface SortProps {\n  // 要重新排序的item\n  fromId: Number;\n  // 目标item\n  referenceId: Number;\n  // 放在目标item 前 还是 后\n  type: \"before\" | \"after\";\n  fromKanbanId?: number;\n  toKanbanId?: number;\n}\n\nexport const useReorderKanban = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation((params: SortProps) => {\n    return client(\"kanbans/reorder\", {\n      data: params,\n      method: \"POST\",\n    });\n  }, useReorderKanbanConfig(queryKey));\n};\n","export default __webpack_public_path__ + \"static/media/task.e014c5d5.svg\";","export default __webpack_public_path__ + \"static/media/bug.bc7dca9d.svg\";","import { Card, Input } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useAddTask } from \"utils/task\";\r\nimport { useProjectIdInUrl, useTasksQueryKey } from \"./util\";\r\n\r\nexport const CreateTask = ({ kanbanId }: { kanbanId: number }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const { mutateAsync: addTask } = useAddTask(useTasksQueryKey());\r\n  const projectId = useProjectIdInUrl();\r\n  const [inputMode, setInputMode] = useState(false);\r\n\r\n  // 去掉async await，直接执行下两步，让乐观更新更流畅\r\n  const submit = () => {\r\n    addTask({ projectId, name, kanbanId });\r\n    setInputMode(false);\r\n    setName(\"\");\r\n  };\r\n\r\n  const toggle = () => setInputMode((mode) => !mode);\r\n  useEffect(() => {\r\n    if (!inputMode) {\r\n      setName(\"\");\r\n    }\r\n  }, [inputMode]);\r\n\r\n  if (!inputMode) {\r\n    return <div onClick={toggle}>+ 创建事务</div>;\r\n  }\r\n  return (\r\n    <Card>\r\n      <Input\r\n        onBlur={toggle}\r\n        placeholder={\"需要做些什么\"}\r\n        autoFocus={true}\r\n        onPressEnter={submit}\r\n        value={name}\r\n        onChange={(evt) => setName(evt.target.value)}\r\n      ></Input>\r\n    </Card>\r\n  );\r\n};\r\n","export const Mark = ({ name, keyword }: { name: string; keyword: string }) => {\n  if (!keyword) {\n    return <span>{name}</span>;\n  }\n  // 按照关键词拆分，关键词标色\n  const arr = name.split(keyword);\n  return (\n    <>\n      {arr.map((str, index) => (\n        <span key={index}>\n          {/* 除了最后一个元素，每个元素后面加上带颜色的keyword */}\n          {str}\n          {index === arr.length - 1 ? null : (\n            <span style={{ color: \"#257AFD\" }}>{keyword}</span>\n          )}\n        </span>\n      ))}\n    </>\n  );\n};\n","import { Kanban } from \"types/kanban\";\nimport { useTasks } from \"utils/task\";\nimport { useTaskTypes } from \"utils/task-type\";\nimport {\n  useKanbansQueryKey,\n  useTasksModal,\n  useTasksSearchParams,\n} from \"./util\";\nimport taskIcon from \"assets/task.svg\";\nimport bugIcon from \"assets/bug.svg\";\nimport styled from \"@emotion/styled\";\nimport { Button, Card, Dropdown, Menu, Modal } from \"antd\";\nimport { CreateTask } from \"./create-task\";\nimport { Task } from \"types/task\";\nimport { Mark } from \"components/mark\";\nimport { useDeleteKanban } from \"utils/kanban\";\nimport { Row } from \"components/lib\";\nimport React from \"react\";\nimport { Drag, Drop, DropChild } from \"components/drag-and-drop\";\n\nconst TaskTypeIcon = ({ id }: { id: number }) => {\n  const { data: taskTypes } = useTaskTypes();\n  const name = taskTypes?.find((taskType) => taskType.id === id)?.name;\n  if (!name) {\n    return null;\n  }\n  return <img src={name === \"task\" ? taskIcon : bugIcon} alt=\"img\" />;\n};\n\n// 也可以不在TaskCard定义的外面包 React.forwardRef，而是在TaskCard调用的地方，TaskCard标签外面再套一层div，因为div标签可以有转发\nconst TaskCard = React.forwardRef<HTMLDivElement, { task: Task }>(\n  ({ task, ...props }, ref) => {\n    // 当task.id是undefined，控制台会报错，所以给一个默认值taskId\n    // 点击card时，编辑task\n    const { startEdit } = useTasksModal();\n    const { name: keyword } = useTasksSearchParams();\n    return (\n      <div ref={ref} {...props}>\n        <Card\n          onClick={() => startEdit(task.id)}\n          style={{ marginBottom: \"0.5rem\", cursor: \"pointer\" }}\n          key={task.id || \"taskId\"}\n        >\n          <p>\n            <Mark keyword={keyword} name={task.name}></Mark>\n          </p>\n          <TaskTypeIcon id={task.typeId} />\n        </Card>\n      </div>\n    );\n  }\n);\n\n// Drag在定义的地方，用 React.cloneElement 给它的children元素加了ref属性，做转发； 因此要在这个地方加上forwardRef反复\n// KanbanColumn 是 Drag 的子元素，React.cloneElement克隆子元素时，给新元素传除ref以外的其他属性，都放在  { kanban, ...props } 里\nexport const KanbanColumn = React.forwardRef<\n  HTMLDivElement,\n  { kanban: Kanban }\n>(({ kanban, ...props }, ref) => {\n  const { data: allTasks } = useTasks(useTasksSearchParams());\n  const tasks = allTasks?.filter((task) => task.kanbanId === kanban.id);\n  return (\n    <Container ref={ref} {...props}>\n      <Row between={true}>\n        <h3>{kanban.name}</h3>\n        <More kanban={kanban} key={kanban.id}></More>\n      </Row>\n      <TaskContainer>\n        <Drop\n          type={\"ROW\"}\n          direction={\"vertical\"}\n          droppableId={String(kanban.id)}\n        >\n          {/* DropChild 高度是0时，destination就是null； 非0时，是正常对象 */}\n          <DropChild style={{ minHeight: \"5px\" }}>\n            {tasks?.map((task, taskIndex) => (\n              <Drag\n                key={task.id}\n                draggableId={\"task\" + task.id}\n                index={taskIndex}\n              >\n                <TaskCard task={task} key={task.id}></TaskCard>\n              </Drag>\n            ))}\n          </DropChild>\n        </Drop>\n        <CreateTask kanbanId={kanban.id} />\n      </TaskContainer>\n    </Container>\n  );\n});\n\nconst More = ({ kanban }: { kanban: Kanban }) => {\n  const { mutateAsync } = useDeleteKanban(useKanbansQueryKey());\n  const startEdit = () => {\n    Modal.confirm({\n      okText: \"确定\",\n      cancelText: \"取消\",\n      title: \"确定删除看板吗？\",\n      onOk() {\n        return mutateAsync({ id: kanban.id });\n      },\n    });\n  };\n  const overlay = (\n    <Menu>\n      <Menu.Item>\n        <Button type=\"link\" onClick={startEdit}>\n          删除\n        </Button>\n      </Menu.Item>\n    </Menu>\n  );\n  return (\n    <Dropdown overlay={overlay}>\n      <Button type={\"link\"}>...</Button>\n    </Dropdown>\n  );\n};\n\nexport const Container = styled.div`\n  min-width: 27rem;\n  border-radius: 6px;\n  background-color: rgb(244, 245, 247);\n  display: flex;\n  flex-direction: column;\n  padding: 0.7rem 0.7rem 1rem;\n  margin-right: 1.5rem;\n`;\nconst TaskContainer = styled.div`\n  overflow: scroll;\n  flex: 1;\n  /* 超出 TaskContainer不要滚动*/\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n","import { Input } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { useAddKanban } from \"utils/kanban\";\r\nimport { Container } from \"./kanban-cloumn\";\r\nimport { useKanbansQueryKey, useProjectIdInUrl } from \"./util\";\r\n\r\nexport const CreateKanban = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const projectId = useProjectIdInUrl();\r\n  const { mutateAsync: addKanban } = useAddKanban(useKanbansQueryKey());\r\n  const submit = () => {\r\n    addKanban({ name, projectId });\r\n    setName(\"\");\r\n  };\r\n  return (\r\n    <Container>\r\n      <Input\r\n        size={\"large\"}\r\n        placeholder={\"新建看板名称\"}\r\n        onPressEnter={submit}\r\n        value={name}\r\n        onChange={(evt) => setName(evt.target.value)}\r\n      ></Input>\r\n    </Container>\r\n  );\r\n};\r\n","import { Button, Form, Input, Modal, Spin } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { TaskTypeSelect } from \"components/task-type-select\";\nimport { UserSelect } from \"components/user-select\";\nimport { useEffect } from \"react\";\nimport { useDeleteTask, useEditTask } from \"utils/task\";\nimport { useTasksModal, useTasksQueryKey } from \"./util\";\n\n// 设置左边文字和右边表单的样式\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\n\n// 修改任务内容的模态框\nexport const TaskModal = () => {\n  const [form] = useForm();\n  const {\n    editingTaskId,\n    close,\n    editingTask,\n    isLoading: isEditingTaskLoading,\n  } = useTasksModal();\n  const { mutateAsync: editTask, isLoading: editLoading } = useEditTask(\n    useTasksQueryKey()\n  );\n  const { mutateAsync: deleteTask } = useDeleteTask(useTasksQueryKey());\n\n  // 关闭时，先关掉，然后重置数据\n  const onCancel = () => {\n    close();\n    form.resetFields();\n  };\n\n  // 确定时，将输入的内容覆盖掉查到的详情\n  const onOk = async () => {\n    editTask({ ...editingTask, ...form.getFieldsValue() });\n    close();\n  };\n\n  // 删除看板和任务\n  const startDelete = () => {\n    close();\n    Modal.confirm({\n      okText: \"确定\",\n      cancelText: \"取消\",\n      title: \"确定删除任务吗？\",\n      onOk() {\n        return deleteTask({ id: Number(editingTaskId) });\n      },\n    });\n  };\n\n  // 当form 或者 editingTask改变时，更新form的数据\n  useEffect(() => {\n    form.setFieldsValue(editingTask);\n  }, [form, editingTask]);\n\n  // form表单，任务名、经办人、类型\n  return (\n    <Modal\n      forceRender={true}\n      onCancel={onCancel}\n      onOk={onOk}\n      visible={!!editingTaskId}\n      cancelText={\"取消\"}\n      confirmLoading={editLoading}\n      okText={\"确认\"}\n      title={\"编辑\"}\n    >\n      {isEditingTaskLoading ? (\n        <div style={{ textAlign: \"center\" }}>\n          <Spin size={\"large\"}></Spin>\n        </div>\n      ) : (\n        <>\n          <Form {...layout} form={form} initialValues={editingTask}>\n            <Form.Item\n              label={\"任务名\"}\n              name={\"name\"}\n              rules={[{ required: true, message: \"请输入任务名\" }]}\n            >\n              <Input></Input>\n            </Form.Item>\n            <Form.Item label={\"经办人\"} name={\"processorId\"}>\n              <UserSelect defaultOptionName={\"经办人\"}></UserSelect>\n            </Form.Item>\n            <Form.Item label={\"类型\"} name={\"typeId\"}>\n              <TaskTypeSelect></TaskTypeSelect>\n            </Form.Item>\n          </Form>\n          <div style={{ textAlign: \"right\" }}>\n            <Button\n              onClick={startDelete}\n              size={\"small\"}\n              style={{ fontSize: \"14px\" }}\n            >\n              删除\n            </Button>\n          </div>\n        </>\n      )}\n    </Modal>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { Spin } from \"antd\";\nimport { Drag, Drop, DropChild } from \"components/drag-and-drop\";\nimport { ScreenContainer } from \"components/lib\";\nimport { useCallback } from \"react\";\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\nimport { SearchPanel } from \"screens/kanban/search-panel\";\nimport { useDocumentTitle } from \"utils\";\nimport { useKanbans, useReorderKanban } from \"utils/kanban\";\nimport { useReorderTask, useTasks } from \"utils/task\";\nimport { CreateKanban } from \"./create-kanban\";\nimport { KanbanColumn } from \"./kanban-cloumn\";\nimport { TaskModal } from \"./task-modal\";\nimport {\n  useKanbanSearchParams,\n  useKanbansQueryKey,\n  useProjectInUrl,\n  useTasksQueryKey,\n  useTasksSearchParams,\n} from \"./util\";\n\nexport const KanbanScreen = () => {\n  useDocumentTitle(\"看板列表\");\n  const { data: currentProject } = useProjectInUrl();\n  const { data: kanbans, isLoading: kanbanIsLoading } = useKanbans(\n    useKanbanSearchParams()\n  );\n  const { isLoading: taskIsLoading } = useTasks(useTasksSearchParams());\n  const isLoading = kanbanIsLoading || taskIsLoading;\n  const onDrapEnd = useDragEnd();\n  return (\n    // onDragEnd 里放的是持久化的工作\n    <DragDropContext onDragEnd={onDrapEnd}>\n      <ScreenContainer>\n        <h1>{currentProject?.name}看板</h1>\n        <SearchPanel></SearchPanel>\n        {isLoading ? (\n          <Spin size={\"large\"} />\n        ) : (\n          <KanbanContainer>\n            <Drop\n              type={\"COLUMN\"}\n              direction={\"horizontal\"}\n              droppableId={\"kanban\"}\n            >\n              <DropChild style={{ display: \"flex\" }}>\n                {kanbans?.map((kanban, index) => (\n                  // kanban.id是undefined时，控制台会报错，所以给一个默认值 kanbanId\n                  <Drag\n                    key={kanban.id}\n                    draggableId={\"kanban\" + kanban.id}\n                    index={index}\n                  >\n                    <KanbanColumn\n                      kanban={kanban}\n                      key={kanban.id || \"kanbanId\"}\n                    ></KanbanColumn>\n                  </Drag>\n                ))}\n              </DropChild>\n            </Drop>\n            <CreateKanban />\n          </KanbanContainer>\n        )}\n        <TaskModal />\n      </ScreenContainer>\n    </DragDropContext>\n  );\n};\n\nexport const useDragEnd = () => {\n  const { data: kanbans } = useKanbans(useKanbanSearchParams());\n  const { data: tasks = [] } = useTasks(useTasksSearchParams());\n  const { mutate: reorderKanban } = useReorderKanban(useKanbansQueryKey());\n  const { mutate: reorderTask } = useReorderTask(useTasksQueryKey());\n  return useCallback(\n    ({ destination, source, type }: DropResult) => {\n      if (!destination) {\n        return;\n      }\n      // 横向，看板重新排列\n      if (type === \"COLUMN\") {\n        const fromId = kanbans?.[source.index].id;\n        const toId = kanbans?.[destination.index].id;\n        if (!fromId || !toId || fromId === toId) {\n          return;\n        }\n        const type = source.index > destination.index ? \"before\" : \"after\";\n        reorderKanban({\n          fromId,\n          referenceId: toId,\n          type,\n        });\n      }\n      // 纵向，任务重新排列\n      // droppableId -> kanban.id   index -> task的index\n      if (type === \"ROW\") {\n        // 将string类型转化为number类型\n        const fromKanbanId = +source.droppableId;\n        const toKanbanId = +destination.droppableId;\n        if (fromKanbanId === toKanbanId) {\n          return;\n        }\n        const fromTask = tasks?.filter(\n          (task) => task.kanbanId === fromKanbanId\n        )[source.index];\n        const toTask = tasks?.filter((task) => task.kanbanId === toKanbanId)[\n          destination.index\n        ];\n        if (fromTask?.id === toTask?.id) {\n          return;\n        }\n        reorderTask({\n          fromId: fromTask?.id,\n          referenceId: toTask?.id,\n          fromKanbanId,\n          toKanbanId,\n          type:\n            fromKanbanId === toKanbanId && destination.index > source.index\n              ? \"after\"\n              : \"before\",\n        });\n      }\n    },\n    [kanbans, reorderKanban, tasks, reorderTask]\n  );\n};\n\n// DropChild 就是 KanbanContainer\nexport const KanbanContainer = styled.div`\n  display: flex;\n  overflow-x: scroll;\n  /* 上面的 h1和 div都是固定高度，KanbanContainer占满盒子 */\n  flex-grow: 1;\n`;\n","import { Link } from \"react-router-dom\";\nimport { Route, Routes, Navigate, useLocation } from \"react-router\";\nimport { EpicScreen } from \"screens/epic\";\nimport { KanbanScreen } from \"screens/kanban\";\nimport styled from \"@emotion/styled\";\nimport { Menu } from \"antd\";\n\nconst useRouteType = () => {\n  const units = useLocation().pathname.split(\"/\");\n  return units[units.length - 1];\n};\nexport const ProjectScreen = () => {\n  const routeType = useRouteType();\n  return (\n    <Container>\n      <Aside>\n        <Menu mode={\"inline\"} selectedKeys={[routeType]}>\n          <Menu.Item key={\"kanban\"}>\n            <Link to={\"kanban\"}>看板</Link>\n          </Menu.Item>\n          <Menu.Item key={\"epic\"}>\n            <Link to={\"epic\"}>任务组</Link>\n          </Menu.Item>\n        </Menu>\n      </Aside>\n      <Main>\n        <Routes>\n          {/* Route中定义的路由，会自动加到当前组件的路由后面，即新路由是： /projects/:projectId/kanban */}\n          <Route path={\"/kanban\"} element={<KanbanScreen />} />\n          <Route path={\"/epic\"} element={<EpicScreen />} />\n          {/* 默认跳转到 /projects/:projectId/kanban  */}\n          {/* 不加replace时，往后跳，到的是projects/:projectId，上面两项都不符合，又到了默认路由，所以页面上看到的是，跳转时，页面没动 */}\n          <Navigate\n            to={window.location.pathname + \"/kanban\"}\n            replace={true}\n          ></Navigate>\n        </Routes>\n      </Main>\n    </Container>\n  );\n};\n\nconst Aside = styled.aside`\n  background-color: rgb(244, 245, 247);\n  display: flex;\n`;\n\n// main里面hidden，TaskContainer里scroll, 滚动条出现在taskContainer里\nconst Main = styled.div`\n  box-shadow: -5px 0 5px -5px rgba(0, 0, 0, 0.1);\n  display: flex;\n  overflow: hidden;\n`;\n\n// 左边 16rem，右边自动往右扩展\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 16rem 1fr;\n  width: 100%;\n`;\n","import styled from \"@emotion/styled\";\r\nimport { Button, Drawer, Form, Input, Spin } from \"antd\";\r\nimport { useForm } from \"antd/lib/form/Form\";\r\nimport { ErrorBox } from \"components/lib\";\r\nimport { UserSelect } from \"components/user-select\";\r\nimport { useEffect } from \"react\";\r\nimport { useAddProject, useEditProject } from \"utils/project\";\r\nimport { useProjectModal, useProjectsQueryKey } from \"./util\";\r\n\r\nexport const ProjectModal = () => {\r\n  const {\r\n    projectModalOpen,\r\n    close,\r\n    editingProject,\r\n    isLoading,\r\n  } = useProjectModal();\r\n  const useMutateProject = editingProject ? useEditProject : useAddProject;\r\n\r\n  const { mutateAsync, error, isLoading: mutateLoading } = useMutateProject(\r\n    useProjectsQueryKey()\r\n  );\r\n  const [form] = useForm();\r\n  const onFinish = (values: any) => {\r\n    mutateAsync({ ...editingProject, ...values }).then(() => {\r\n      form.resetFields();\r\n      close();\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    form.resetFields();\r\n    close();\r\n  };\r\n\r\n  const title = editingProject ? \"编辑项目\" : \"创建项目\";\r\n\r\n  // 当表单内容改变时，重置表单\r\n  useEffect(() => {\r\n    form.setFieldsValue(editingProject);\r\n  }, [editingProject, form]);\r\n\r\n  return (\r\n    // forceRender={true} 解决useForm无元素挂载的问题\r\n    <Drawer\r\n      forceRender={true}\r\n      visible={projectModalOpen}\r\n      onClose={closeModal}\r\n      width={\"100%\"}\r\n    >\r\n      <Container>\r\n        {isLoading ? (\r\n          <Spin size={\"large\"}></Spin>\r\n        ) : (\r\n          <>\r\n            <h1>{title}</h1>\r\n            <ErrorBox error={error}></ErrorBox>\r\n            <Form\r\n              form={form}\r\n              layout={\"vertical\"}\r\n              style={{ width: \"40rem\" }}\r\n              onFinish={onFinish}\r\n            >\r\n              <Form.Item\r\n                label={\"名称\"}\r\n                name={\"name\"}\r\n                rules={[{ required: true, message: \"请输入项目名\" }]}\r\n              >\r\n                <Input placeholder={\"请输入项目名称\"}></Input>\r\n              </Form.Item>\r\n              <Form.Item\r\n                label={\"部门\"}\r\n                name={\"organization\"}\r\n                rules={[{ required: true, message: \"请输入部门名称\" }]}\r\n              >\r\n                <Input placeholder={\"请输入部门名\"}></Input>\r\n              </Form.Item>\r\n              <Form.Item label={\"负责人\"} name={\"personId\"}>\r\n                <UserSelect defaultOptionName={\"负责人\"}></UserSelect>\r\n              </Form.Item>\r\n\r\n              <Form.Item style={{ textAlign: \"right\" }}>\r\n                <Button\r\n                  loading={mutateLoading}\r\n                  type={\"primary\"}\r\n                  htmlType={\"submit\"}\r\n                >\r\n                  提交\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  height: 80vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import styled from \"@emotion/styled\";\nimport { Divider, List, Popover, Typography } from \"antd\";\nimport { useProjectModal } from \"screens/project-list/util\";\nimport { useProject } from \"utils/project\";\nimport { ButtonNoPadding } from \"./lib\";\n\nexport const ProjectPopover = () => {\n  // useProject在调用时，没有传queryKey\n  const { data: projects, refetch } = useProject();\n  const { open } = useProjectModal();\n  const pinnedProjects = projects?.filter((project) => project.pin);\n  const content = (\n    <ContentContainer>\n      <Typography.Text type={\"secondary\"}>收藏项目</Typography.Text>\n      <List>\n        {pinnedProjects?.map((project) => (\n          <List.Item key={project.id}>\n            <List.Item.Meta title={project.name}></List.Item.Meta>\n          </List.Item>\n        ))}\n      </List>\n      <Divider></Divider>\n      <ButtonNoPadding onClick={open} type={\"link\"}>\n        创建项目\n      </ButtonNoPadding>\n    </ContentContainer>\n  );\n  return (\n    <Popover\n      onVisibleChange={() => refetch()}\n      placement={\"bottom\"}\n      content={content}\n    >\n      <span>项目</span>\n    </Popover>\n  );\n};\n\nconst ContentContainer = styled.div`\n  min-width: 30rem;\n`;\n","import styled from \"@emotion/styled\";\nimport { Divider, List, Popover, Typography } from \"antd\";\nimport { useUser } from \"utils/user\";\n\nexport const UserPopover = () => {\n  // useProject在调用时，没有传queryKey\n  const { data: users, refetch } = useUser();\n  const content = (\n    <ContentContainer>\n      <Typography.Text type={\"secondary\"}>组员列表</Typography.Text>\n      <List>\n        {users?.map((user) => (\n          <List.Item key={user.id}>\n            <List.Item.Meta title={user.name}></List.Item.Meta>\n          </List.Item>\n        ))}\n      </List>\n      <Divider></Divider>\n    </ContentContainer>\n  );\n  return (\n    <Popover\n      onVisibleChange={() => refetch()}\n      placement={\"bottom\"}\n      content={content}\n    >\n      <span>组员</span>\n    </Popover>\n  );\n};\n\nconst ContentContainer = styled.div`\n  min-width: 30rem;\n`;\n","import styled from \"@emotion/styled\";\nimport { ButtonNoPadding, Row } from \"components/lib\";\nimport { useAuth } from \"context/auth-context\";\nimport { ProjectList } from \"screens/project-list\";\nimport { ReactComponent as SoftwareLogo } from \"assets/software-logo.svg\";\nimport { Button, Dropdown, Menu } from \"antd\";\nimport { Navigate, Route, Routes } from \"react-router\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ProjectScreen } from \"screens/project\";\nimport { resetRoute } from \"utils\";\nimport { ProjectModal } from \"screens/project-list/project-modal\";\nimport { ProjectPopover } from \"components/project-popover\";\nimport { UserPopover } from \"components/user-popover\";\n\n/**\n * grid和flex应用的场景\n * 1，是一维布局还是二维布局\n * 一维的意思是，仅仅是一个方向(横或纵), 二维的意思是，两个方向都有(横和纵)。一般来说，一维布局用flex，二维布局用grid\n *  2，是从内容出发，还是从布局出发\n * 从内容出发：先有一组内容（数量不固定），内容均匀分布在容器中，由内容自己大小决定容器的大小\n * 从布局出发：先规划网格（数量一般比较固定）,然后把元素往里填充\n * 从内容出发用flex，从布局出发用grid\n */\n\n/**\n * 用状态提升的方式，有几个问题：\n * 1，函数定义和调用隔得太远，当修改函数时，调用的地方也要进行修改\n * 2，代码耦合太强\n *\n */\n\n// 控制反转 的介绍： https://zhuanlan.zhihu.com/p/60995312\nexport const AuthenticatedApp = () => {\n  // 能够访问Container、PageHeader等变量的原因是：这些变量只是跟在return后面，被返回出去了；但是并没有被执行；container虽然是由const定义的，但是也有变量提升，只是不能马上使用\n  return (\n    <Container>\n      {/* 将router移动到PageHeader外面是因为页面报错，useLocation 用到了Router里的东西，应该被它包裹住 */}\n      <Router>\n        <PageHeader />\n        <Main>\n          {/* 在react-router 6中路由都用Routes包裹起来 */}\n          <Routes>\n            <Route path={\"/projects\"} element={<ProjectList />}></Route>\n            {/* 不加 * 的话，projects/1/kanban 将不会渲染 */}\n            <Route\n              path={\"/projects/:projectId/*\"}\n              element={<ProjectScreen />}\n            ></Route>\n            {/* 默认跳转到 /projects */}\n            <Navigate to={\"/projects\"}></Navigate>\n          </Routes>\n        </Main>\n        <ProjectModal />\n      </Router>\n    </Container>\n  );\n};\n\n// 将header部分的内容抽离出来\nconst PageHeader = () => {\n  return (\n    <Header between={true}>\n      <HeaderLeft gap={1}>\n        <ButtonNoPadding type={\"link\"} onClick={resetRoute}>\n          <SoftwareLogo width={\"18rem\"} color={\"rgb(38, 132, 255)\"} />\n        </ButtonNoPadding>\n        <ProjectPopover />\n        <UserPopover />\n      </HeaderLeft>\n      <HeaderRight>\n        <User />\n      </HeaderRight>\n    </Header>\n  );\n};\n\nconst User = () => {\n  const { logout, user } = useAuth();\n  return (\n    <Dropdown\n      overlay={\n        <Menu>\n          <Menu.Item key={\"logout\"}>\n            <Button type={\"link\"} onClick={logout}>\n              登出\n            </Button>\n          </Menu.Item>\n        </Menu>\n      }\n    >\n      <Button type={\"link\"} onClick={(e) => e.preventDefault()}>\n        Hi, {user?.name}\n      </Button>\n    </Dropdown>\n  );\n};\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 6rem 1fr;\n  height: 100vh;\n`;\n\n// 有两种方式，一种通过Header传参between，一种通过将样式写在Header的定义中\nconst Header = styled(Row)`\n  /* justify-content: space-between; */\n  padding: 3.2rem;\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.1);\n  z-index: 1;\n`;\nconst HeaderLeft = styled(Row)``;\nconst HeaderRight = styled.div``;\nconst Main = styled.main`\n  display: flex;\n  overflow: hidden;\n`;\n","import React from \"react\";\r\n\r\n// 错误边界必须是class组件，且这个class组件中定义了 static getDerivedStateFromError() 或者 static componentDidCatch()方法\r\n\r\n// 定义一个类型别名： FallbackRender\r\ntype FallbackRender = (props: { error: Error | null }) => React.ReactElement;\r\n// PropsWithChildren是联合类型，将children和fallbackRender结合成一个类型\r\nexport class ErrorBoundry extends React.Component<\r\n  React.PropsWithChildren<{ fallbackRender: FallbackRender }>,\r\n  { error: Error | null }\r\n> {\r\n  state = {\r\n    error: null,\r\n  };\r\n  // 当ErrorBoundry的子组件发生错误后，getDerivedStateFromError就会被调用，值会赋给state的error\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { error };\r\n  }\r\n  render() {\r\n    const { error } = this.state;\r\n    const { fallbackRender, children } = this.props;\r\n    if (error) {\r\n      return fallbackRender({ error });\r\n    }\r\n    return children;\r\n  }\r\n}\r\n","import { useAuth } from \"context/auth-context\";\r\nimport { Form, Input } from \"antd\";\r\nimport { LongButton } from \"./index\";\r\nimport { useAsync } from \"utils/use-async\";\r\nexport const LoginScreen = ({\r\n  onError,\r\n}: {\r\n  onError: (error: Error) => void;\r\n}) => {\r\n  const { login } = useAuth();\r\n  const { run, isLoading } = useAsync(undefined, { throwOnError: true });\r\n  const handleSumbit = async (values: {\r\n    username: string;\r\n    password: string;\r\n  }) => {\r\n    try {\r\n      await run(login(values));\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n  return (\r\n    <Form onFinish={handleSumbit}>\r\n      <Form.Item\r\n        name={\"username\"}\r\n        rules={[{ required: true, message: \"请输入用户名\" }]}\r\n      >\r\n        <Input placeholder={\"用户名\"} type=\"text\" id={\"username\"}></Input>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={\"password\"}\r\n        rules={[{ required: true, message: \"请输入密码\" }]}\r\n      >\r\n        <Input placeholder={\"密码\"} type=\"password\" id={\"password\"}></Input>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <LongButton loading={isLoading} htmlType={\"submit\"} type={\"primary\"}>\r\n          登录\r\n        </LongButton>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n","import { Form, Input } from \"antd\";\r\nimport { useAuth } from \"context/auth-context\";\r\nimport { useAsync } from \"utils/use-async\";\r\nimport { LongButton } from \"./index\";\r\n// 调用RegisterScreen时，用到了onError, onError有个传参error，返回值是void类型\r\nexport const RegisterScreen = ({\r\n  onError,\r\n}: {\r\n  onError: (error: Error) => void;\r\n}) => {\r\n  const { register } = useAuth();\r\n  const { run, isLoading } = useAsync(undefined, { throwOnError: true });\r\n  // cpassword不参与接口调用\r\n  const handleSumbit = async ({\r\n    cpassword,\r\n    ...values\r\n  }: {\r\n    username: string;\r\n    password: string;\r\n    cpassword: string;\r\n  }) => {\r\n    if (cpassword !== values.password) {\r\n      onError(new Error(\"两次输入密码请保持一致\"));\r\n      return;\r\n    }\r\n    // 同步和异步混用的时候，用try catch\r\n    try {\r\n      await run(register(values));\r\n    } catch (error) {\r\n      // 调用接收的onError参数，其实也就是调用了父组件的setError\r\n      onError(error);\r\n    }\r\n  };\r\n  return (\r\n    <Form onFinish={handleSumbit}>\r\n      <Form.Item\r\n        name={\"username\"}\r\n        rules={[{ required: true, message: \"请输入用户名\" }]}\r\n      >\r\n        <Input placeholder={\"用户名\"} type=\"text\" id={\"username\"}></Input>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={\"password\"}\r\n        rules={[{ required: true, message: \"请输入密码\" }]}\r\n      >\r\n        <Input placeholder={\"密码\"} type=\"password\" id={\"password\"}></Input>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={\"cpassword\"}\r\n        rules={[{ required: true, message: \"请确认密码\" }]}\r\n      >\r\n        <Input\r\n          placeholder={\"确认密码\"}\r\n          type=\"cpassword\"\r\n          id={\"cpassword\"}\r\n        ></Input>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <LongButton loading={isLoading} htmlType={\"submit\"} type={\"primary\"}>\r\n          注册\r\n        </LongButton>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.8bb06c97.svg\";","export default __webpack_public_path__ + \"static/media/left.e74de3ec.svg\";","export default __webpack_public_path__ + \"static/media/right.890da620.svg\";","import styled from \"@emotion/styled\";\r\nimport { Button, Card, Divider } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { LoginScreen } from \"./login\";\r\nimport { RegisterScreen } from \"./register\";\r\nimport logo from \"assets/logo.svg\";\r\nimport left from \"assets/left.svg\";\r\nimport right from \"assets/right.svg\";\r\nimport { useDocumentTitle } from \"utils\";\r\nimport { ErrorBox } from \"components/lib\";\r\n\r\nexport const UnauthenticatedApp = () => {\r\n  const [isRegister, setIsRegister] = useState(false);\r\n  // error变量是子组件改变父组件中变量的例子。onError属性绑定了setError方法传到了子组件\r\n  const [error, setError] = useState<Error | null>(null);\r\n  useDocumentTitle(\"请注册或登录以继续\");\r\n  return (\r\n    <Container>\r\n      <Header />\r\n      <Background />\r\n      <ShadowCard>\r\n        <Title>{isRegister ? \"请注册\" : \"请登录\"}</Title>\r\n        <ErrorBox error={error}></ErrorBox>\r\n        {isRegister ? (\r\n          <RegisterScreen onError={setError} />\r\n        ) : (\r\n          <LoginScreen onError={setError} />\r\n        )}\r\n        <Divider></Divider>\r\n        <Button type={\"link\"} onClick={() => setIsRegister(!isRegister)}>\r\n          {isRegister ? \"已经注册了? 直接登录\" : \"没有账号？注册新账号\"}\r\n        </Button>\r\n      </ShadowCard>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Title = styled.h2`\r\n  margin-bottom: 2.4rem;\r\n  color: rgb(94, 108, 132);\r\n`;\r\n\r\n// 将两个背景图，通过background相关属性一次设置好\r\nconst Background = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-repeat: no-repeat;\r\n  background-attachment: fixed;\r\n  background-position: left bottom, right bottom;\r\n  background-size: calc(((100vw - 40rem) / 2) - 3.2rem),\r\n    calc(((100vw - 40rem) / 2) - 3.2rem), cover;\r\n  background-image: url(${left}), url(${right});\r\n`;\r\n\r\n// 反引号可参照魔法字符串传入参数\r\nconst Header = styled.header`\r\n  background: url(${logo}) no-repeat center;\r\n  padding: 5rem 0;\r\n  background-size: 8rem;\r\n  width: 100%;\r\n`;\r\n\r\n// styled后面必须跟html标签\r\n// 渲染出来的是 class为css-1260ujn的div标签\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n`;\r\n\r\n// 变量名首字母大写，需要包装的antd标签作为styled的传参\r\nconst ShadowCard = styled(Card)`\r\n  width: 40rem;\r\n  min-height: 56rem;\r\n  padding: 3.2rem 4rem;\r\n  border-radius: 0.3rem;\r\n  box-sizing: border-box;\r\n  box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const LongButton = styled(Button)`\r\n  width: 100%;\r\n`;\r\n","import { AuthenticatedApp } from \"authenticated-app\";\r\nimport { ErrorBoundry } from \"components/error-boundry\";\r\nimport { FullPageErrorFallback } from \"components/lib\";\r\nimport { useAuth } from \"context/auth-context\";\r\nimport { UnauthenticatedApp } from \"unauthenticated-app\";\r\nimport \"./App.css\";\r\n\r\n// 根据是否有user属性，来判断展示登录页面还是注册页面\r\nfunction App() {\r\n  const { user } = useAuth();\r\n  return (\r\n    <div className=\"App\">\r\n      <ErrorBoundry fallbackRender={FullPageErrorFallback}>\r\n        {user ? <AuthenticatedApp /> : <UnauthenticatedApp />}\r\n      </ErrorBoundry>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ReactNode } from \"react\";\r\nimport { AuthProvider } from \"./auth-context\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\n\r\nexport const AppProvider = ({ children }: { children: ReactNode }) => {\r\n  return (\r\n    <QueryClientProvider client={new QueryClient()}>\r\n      <AuthProvider>{children}</AuthProvider>\r\n    </QueryClientProvider>\r\n  );\r\n};\r\n","import \"./wdyr\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { DevTools, loadServer } from \"jira-dev-tool\";\r\n// 务必在dev-tool后面\r\nimport \"antd/dist/antd.less\";\r\nimport { AppProvider } from \"context/index\";\r\n\r\nloadServer(() => {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <AppProvider>\r\n        <DevTools />\r\n        <App />\r\n      </AppProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n  );\r\n});\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}